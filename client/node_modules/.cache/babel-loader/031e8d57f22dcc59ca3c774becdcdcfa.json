{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.monitoring_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar monitoring_v1;\n\n(function (monitoring_v1) {\n  /**\n   * Cloud Monitoring API\n   *\n   * Manages your Cloud Monitoring data and configurations.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const monitoring = google.monitoring('v1');\n   * ```\n   */\n  class Monitoring {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.locations = new Resource$Locations(this.context);\n      this.operations = new Resource$Operations(this.context);\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  monitoring_v1.Monitoring = Monitoring;\n\n  class Resource$Locations {\n    constructor(context) {\n      this.context = context;\n      this.global = new Resource$Locations$Global(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Locations = Resource$Locations;\n\n  class Resource$Locations$Global {\n    constructor(context) {\n      this.context = context;\n      this.metricsScopes = new Resource$Locations$Global$Metricsscopes(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Locations$Global = Resource$Locations$Global;\n\n  class Resource$Locations$Global$Metricsscopes {\n    constructor(context) {\n      this.context = context;\n      this.projects = new Resource$Locations$Global$Metricsscopes$Projects(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    listMetricsScopesByMonitoredProject(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Locations$Global$Metricsscopes = Resource$Locations$Global$Metricsscopes;\n\n  class Resource$Locations$Global$Metricsscopes$Projects {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Locations$Global$Metricsscopes$Projects = Resource$Locations$Global$Metricsscopes$Projects;\n\n  class Resource$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Operations = Resource$Operations;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.dashboards = new Resource$Projects$Dashboards(this.context);\n      this.location = new Resource$Projects$Location(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Dashboards {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/dashboards').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/dashboards').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Dashboards = Resource$Projects$Dashboards;\n\n  class Resource$Projects$Location {\n    constructor(context) {\n      this.context = context;\n      this.prometheus = new Resource$Projects$Location$Prometheus(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location = Resource$Projects$Location;\n\n  class Resource$Projects$Location$Prometheus {\n    constructor(context) {\n      this.context = context;\n      this.api = new Resource$Projects$Location$Prometheus$Api(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location$Prometheus = Resource$Projects$Location$Prometheus;\n\n  class Resource$Projects$Location$Prometheus$Api {\n    constructor(context) {\n      this.context = context;\n      this.v1 = new Resource$Projects$Location$Prometheus$Api$V1(this.context);\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location$Prometheus$Api = Resource$Projects$Location$Prometheus$Api;\n\n  class Resource$Projects$Location$Prometheus$Api$V1 {\n    constructor(context) {\n      this.context = context;\n      this.label = new Resource$Projects$Location$Prometheus$Api$V1$Label(this.context);\n      this.metadata = new Resource$Projects$Location$Prometheus$Api$V1$Metadata(this.context);\n    }\n\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/location/{location}/prometheus/api/v1/query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name', 'location'],\n        pathParams: ['location', 'name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    query_range(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/location/{location}/prometheus/api/v1/query_range').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name', 'location'],\n        pathParams: ['location', 'name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    series(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/location/{location}/prometheus/api/v1/series').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name', 'location'],\n        pathParams: ['location', 'name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1 = Resource$Projects$Location$Prometheus$Api$V1;\n\n  class Resource$Projects$Location$Prometheus$Api$V1$Label {\n    constructor(context) {\n      this.context = context;\n    }\n\n    values(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/location/{location}/prometheus/api/v1/label/{label}/values').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name', 'location', 'label'],\n        pathParams: ['label', 'location', 'name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1$Label = Resource$Projects$Location$Prometheus$Api$V1$Label;\n\n  class Resource$Projects$Location$Prometheus$Api$V1$Metadata {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/location/{location}/prometheus/api/v1/metadata').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name', 'location'],\n        pathParams: ['location', 'name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1$Metadata = Resource$Projects$Location$Prometheus$Api$V1$Metadata;\n})(monitoring_v1 = exports.monitoring_v1 || (exports.monitoring_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","monitoring_v1","googleapis_common_1","require","Monitoring","constructor","options","google","context","_options","locations","Resource$Locations","operations","Resource$Operations","projects","Resource$Projects","global","Resource$Locations$Global","metricsScopes","Resource$Locations$Global$Metricsscopes","Resource$Locations$Global$Metricsscopes$Projects","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","listMetricsScopesByMonitoredProject","create","delete","dashboards","Resource$Projects$Dashboards","location","Resource$Projects$Location","list","patch","prometheus","Resource$Projects$Location$Prometheus","api","Resource$Projects$Location$Prometheus$Api","v1","Resource$Projects$Location$Prometheus$Api$V1","label","Resource$Projects$Location$Prometheus$Api$V1$Label","metadata","Resource$Projects$Location$Prometheus$Api$V1$Metadata","query","query_range","series","values"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/monitoring/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.monitoring_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar monitoring_v1;\n(function (monitoring_v1) {\n    /**\n     * Cloud Monitoring API\n     *\n     * Manages your Cloud Monitoring data and configurations.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const monitoring = google.monitoring('v1');\n     * ```\n     */\n    class Monitoring {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.locations = new Resource$Locations(this.context);\n            this.operations = new Resource$Operations(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    monitoring_v1.Monitoring = Monitoring;\n    class Resource$Locations {\n        constructor(context) {\n            this.context = context;\n            this.global = new Resource$Locations$Global(this.context);\n        }\n    }\n    monitoring_v1.Resource$Locations = Resource$Locations;\n    class Resource$Locations$Global {\n        constructor(context) {\n            this.context = context;\n            this.metricsScopes = new Resource$Locations$Global$Metricsscopes(this.context);\n        }\n    }\n    monitoring_v1.Resource$Locations$Global = Resource$Locations$Global;\n    class Resource$Locations$Global$Metricsscopes {\n        constructor(context) {\n            this.context = context;\n            this.projects = new Resource$Locations$Global$Metricsscopes$Projects(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listMetricsScopesByMonitoredProject(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Locations$Global$Metricsscopes = Resource$Locations$Global$Metricsscopes;\n    class Resource$Locations$Global$Metricsscopes$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Locations$Global$Metricsscopes$Projects = Resource$Locations$Global$Metricsscopes$Projects;\n    class Resource$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Operations = Resource$Operations;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.dashboards = new Resource$Projects$Dashboards(this.context);\n            this.location = new Resource$Projects$Location(this.context);\n        }\n    }\n    monitoring_v1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Dashboards {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/dashboards').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/dashboards').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Projects$Dashboards = Resource$Projects$Dashboards;\n    class Resource$Projects$Location {\n        constructor(context) {\n            this.context = context;\n            this.prometheus = new Resource$Projects$Location$Prometheus(this.context);\n        }\n    }\n    monitoring_v1.Resource$Projects$Location = Resource$Projects$Location;\n    class Resource$Projects$Location$Prometheus {\n        constructor(context) {\n            this.context = context;\n            this.api = new Resource$Projects$Location$Prometheus$Api(this.context);\n        }\n    }\n    monitoring_v1.Resource$Projects$Location$Prometheus = Resource$Projects$Location$Prometheus;\n    class Resource$Projects$Location$Prometheus$Api {\n        constructor(context) {\n            this.context = context;\n            this.v1 = new Resource$Projects$Location$Prometheus$Api$V1(this.context);\n        }\n    }\n    monitoring_v1.Resource$Projects$Location$Prometheus$Api = Resource$Projects$Location$Prometheus$Api;\n    class Resource$Projects$Location$Prometheus$Api$V1 {\n        constructor(context) {\n            this.context = context;\n            this.label = new Resource$Projects$Location$Prometheus$Api$V1$Label(this.context);\n            this.metadata = new Resource$Projects$Location$Prometheus$Api$V1$Metadata(this.context);\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/{+name}/location/{location}/prometheus/api/v1/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name', 'location'],\n                pathParams: ['location', 'name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        query_range(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/{+name}/location/{location}/prometheus/api/v1/query_range').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name', 'location'],\n                pathParams: ['location', 'name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        series(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/{+name}/location/{location}/prometheus/api/v1/series').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name', 'location'],\n                pathParams: ['location', 'name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1 = Resource$Projects$Location$Prometheus$Api$V1;\n    class Resource$Projects$Location$Prometheus$Api$V1$Label {\n        constructor(context) {\n            this.context = context;\n        }\n        values(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/{+name}/location/{location}/prometheus/api/v1/label/{label}/values').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name', 'location', 'label'],\n                pathParams: ['label', 'location', 'name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1$Label = Resource$Projects$Location$Prometheus$Api$V1$Label;\n    class Resource$Projects$Location$Prometheus$Api$V1$Metadata {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://monitoring.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v1/{+name}/location/{location}/prometheus/api/v1/metadata').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name', 'location'],\n                pathParams: ['location', 'name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    monitoring_v1.Resource$Projects$Location$Prometheus$Api$V1$Metadata = Resource$Projects$Location$Prometheus$Api$V1$Metadata;\n})(monitoring_v1 = exports.monitoring_v1 || (exports.monitoring_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}