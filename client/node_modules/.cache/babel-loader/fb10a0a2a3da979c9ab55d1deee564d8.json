{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAPIRequest = void 0;\n\nconst google_auth_library_1 = require(\"google-auth-library\");\n\nconst qs = require(\"qs\");\n\nconst stream = require(\"stream\");\n\nconst urlTemplate = require(\"url-template\");\n\nconst uuid = require(\"uuid\");\n\nconst extend = require(\"extend\");\n\nconst isbrowser_1 = require(\"./isbrowser\");\n\nconst h2 = require(\"./http2\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst pkg = require('../../package.json'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction isReadableStream(obj) {\n  return obj !== null && typeof obj === 'object' && typeof obj.pipe === 'function' && obj.readable !== false && typeof obj._read === 'function' && typeof obj._readableState === 'object';\n}\n\nfunction getMissingParams(params, required) {\n  const missing = new Array();\n  required.forEach(param => {\n    // Is the required param in the params object?\n    if (params[param] === undefined) {\n      missing.push(param);\n    }\n  }); // If there are any required params missing, return their names in array,\n  // otherwise return null\n\n  return missing.length > 0 ? missing : null;\n}\n\nfunction createAPIRequest(parameters, callback) {\n  if (callback) {\n    createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n  } else {\n    return createAPIRequestAsync(parameters);\n  }\n}\n\nexports.createAPIRequest = createAPIRequest;\n\nasync function createAPIRequestAsync(parameters) {\n  var _a; // Combine the GaxiosOptions options passed with this specific\n  // API call with the global options configured at the API Context\n  // level, or at the global level.\n\n\n  const options = extend(true, {}, // Ensure we don't leak settings upstream\n  ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n  parameters.context._options || {}, // Per-API options\n  parameters.options // API call params\n  );\n  const params = extend(true, {}, // New base object\n  options.params, // Combined global/per-api params\n  parameters.params // API call params\n  );\n  options.userAgentDirectives = options.userAgentDirectives || [];\n  const media = params.media || {};\n  /**\n   * In a previous version of this API, the request body was stuffed in a field\n   * named `resource`.  This caused lots of problems, because it's not uncommon\n   * to have an actual named parameter required which is also named `resource`.\n   * This meant that users would have to use `resource_` in those cases, which\n   * pretty much nobody figures out on their own. The request body is now\n   * documented as being in the `requestBody` property, but we also need to keep\n   * using `resource` for reasons of back-compat. Cases that need to be covered\n   * here:\n   * - user provides just a `resource` with a request body\n   * - user provides both a `resource` and a `resource_`\n   * - user provides just a `requestBody`\n   * - user provides both a `requestBody` and a `resource`\n   */\n\n  let resource = params.requestBody;\n\n  if (!params.requestBody && params.resource && (!parameters.requiredParams.includes('resource') || typeof params.resource !== 'string')) {\n    resource = params.resource;\n    delete params.resource;\n  }\n\n  delete params.requestBody;\n  let authClient = params.auth || options.auth;\n  const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n  delete params.media;\n  delete params.auth; // Grab headers from user provided options\n\n  const headers = params.headers || {};\n  populateAPIHeader(headers);\n  delete params.headers; // Un-alias parameters that were modified due to conflicts with reserved names\n\n  Object.keys(params).forEach(key => {\n    if (key.slice(-1) === '_') {\n      const newKey = key.slice(0, -1);\n      params[newKey] = params[key];\n      delete params[key];\n    }\n  }); // Check for missing required parameters in the API request\n\n  const missingParams = getMissingParams(params, parameters.requiredParams);\n\n  if (missingParams) {\n    // Some params are missing - stop further operations and inform the\n    // developer which required params are not included in the request\n    throw new Error('Missing required parameters: ' + missingParams.join(', '));\n  } // Parse urls\n\n\n  if (options.url) {\n    options.url = urlTemplate.parse(options.url).expand(params);\n  }\n\n  if (parameters.mediaUrl) {\n    parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n  } // Rewrite url if rootUrl is globally set\n\n\n  if (parameters.context._options.rootUrl !== undefined && options.url !== undefined) {\n    const originalUrl = new URL(options.url);\n    const path = originalUrl.href.substr(originalUrl.origin.length);\n    options.url = new URL(path, parameters.context._options.rootUrl).href;\n  } // When forming the querystring, override the serializer so that array\n  // values are serialized like this:\n  // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n  // This serializer also encodes spaces in the querystring as `%20`,\n  // whereas the default serializer in gaxios encodes to a `+`.\n\n\n  options.paramsSerializer = params => {\n    return qs.stringify(params, {\n      arrayFormat: 'repeat'\n    });\n  }; // delete path params from the params object so they do not end up in query\n\n\n  parameters.pathParams.forEach(param => delete params[param]); // if authClient is actually a string, use it as an API KEY\n\n  if (typeof authClient === 'string') {\n    params.key = params.key || authClient;\n    authClient = undefined;\n  }\n\n  function multipartUpload(multipart) {\n    const boundary = uuid.v4();\n    const finale = `--${boundary}--`;\n    const rStream = new stream.PassThrough({\n      flush(callback) {\n        this.push('\\r\\n');\n        this.push(finale);\n        callback();\n      }\n\n    });\n    const pStream = new ProgressStream();\n    const isStream = isReadableStream(multipart[1].body);\n    headers['content-type'] = `multipart/related; boundary=${boundary}`;\n\n    for (const part of multipart) {\n      const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n      rStream.push(preamble);\n\n      if (typeof part.body === 'string') {\n        rStream.push(part.body);\n        rStream.push('\\r\\n');\n      } else {\n        // Gaxios does not natively support onUploadProgress in node.js.\n        // Pipe through the pStream first to read the number of bytes read\n        // for the purpose of tracking progress.\n        pStream.on('progress', bytesRead => {\n          if (options.onUploadProgress) {\n            options.onUploadProgress({\n              bytesRead\n            });\n          }\n        });\n        part.body.pipe(pStream).pipe(rStream);\n      }\n    }\n\n    if (!isStream) {\n      rStream.push(finale);\n      rStream.push(null);\n    }\n\n    options.data = rStream;\n  }\n\n  function browserMultipartUpload(multipart) {\n    const boundary = uuid.v4();\n    const finale = `--${boundary}--`;\n    headers['content-type'] = `multipart/related; boundary=${boundary}`;\n    let content = '';\n\n    for (const part of multipart) {\n      const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n      content += preamble;\n\n      if (typeof part.body === 'string') {\n        content += part.body;\n        content += '\\r\\n';\n      }\n    }\n\n    content += finale;\n    options.data = content;\n  }\n\n  if (parameters.mediaUrl && media.body) {\n    options.url = parameters.mediaUrl;\n\n    if (resource) {\n      params.uploadType = 'multipart';\n      const multipart = [{\n        'content-type': 'application/json',\n        body: JSON.stringify(resource)\n      }, {\n        'content-type': media.mimeType || resource && resource.mimeType || defaultMime,\n        body: media.body\n      }];\n\n      if (!(0, isbrowser_1.isBrowser)()) {\n        // gaxios doesn't support multipart/related uploads, so it has to\n        // be implemented here.\n        multipartUpload(multipart);\n      } else {\n        browserMultipartUpload(multipart);\n      }\n    } else {\n      params.uploadType = 'media';\n      Object.assign(headers, {\n        'content-type': media.mimeType || defaultMime\n      });\n      options.data = media.body;\n    }\n  } else {\n    options.data = resource || undefined;\n  }\n\n  options.headers = extend(true, options.headers || {}, headers);\n  options.params = params;\n\n  if (!(0, isbrowser_1.isBrowser)()) {\n    options.headers['Accept-Encoding'] = 'gzip';\n    options.userAgentDirectives.push({\n      product: 'google-api-nodejs-client',\n      version: pkg.version,\n      comment: 'gzip'\n    });\n    const userAgent = options.userAgentDirectives.map(d => {\n      let line = `${d.product}/${d.version}`;\n\n      if (d.comment) {\n        line += ` (${d.comment})`;\n      }\n\n      return line;\n    }).join(' ');\n    options.headers['User-Agent'] = userAgent;\n  } // By default gaxios treats any 2xx as valid, and all non 2xx status\n  // codes as errors.  This is a problem for HTTP 304s when used along\n  // with an eTag.\n\n\n  if (!options.validateStatus) {\n    options.validateStatus = status => {\n      return status >= 200 && status < 300 || status === 304;\n    };\n  } // Retry by default\n\n\n  options.retry = options.retry === undefined ? true : options.retry;\n  delete options.auth; // is overridden by our auth code\n  // Perform the HTTP request.  NOTE: this function used to return a\n  // mikeal/request object. Since the transition to Axios, the method is\n  // now void.  This may be a source of confusion for users upgrading from\n  // version 24.0 -> 25.0 or up.\n\n  if (authClient && typeof authClient === 'object') {\n    if (options.http2) {\n      const authHeaders = await authClient.getRequestHeaders(options.url);\n      const mooOpts = Object.assign({}, options);\n      mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n      return h2.request(mooOpts);\n    } else {\n      return authClient.request(options);\n    }\n  } else {\n    return new google_auth_library_1.DefaultTransporter().request(options);\n  }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\n\n\nclass ProgressStream extends stream.Transform {\n  constructor() {\n    super(...arguments);\n    this.bytesRead = 0;\n  } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  _transform(chunk, encoding, callback) {\n    this.bytesRead += chunk.length;\n    this.emit('progress', this.bytesRead);\n    this.push(chunk);\n    callback();\n  }\n\n}\n\nfunction populateAPIHeader(headers) {\n  // TODO: we should eventually think about adding browser support for this\n  // populating the gl-web header (web support should also be added to\n  // google-auth-library-nodejs).\n  if (!(0, isbrowser_1.isBrowser)()) {\n    headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createAPIRequest","google_auth_library_1","require","qs","stream","urlTemplate","uuid","extend","isbrowser_1","h2","pkg","isReadableStream","obj","pipe","readable","_read","_readableState","getMissingParams","params","required","missing","Array","forEach","param","undefined","push","length","parameters","callback","createAPIRequestAsync","then","r","_a","options","context","google","_options","userAgentDirectives","media","resource","requestBody","requiredParams","includes","authClient","auth","defaultMime","body","headers","populateAPIHeader","keys","key","slice","newKey","missingParams","Error","join","url","parse","expand","mediaUrl","rootUrl","originalUrl","URL","path","href","substr","origin","paramsSerializer","stringify","arrayFormat","pathParams","multipartUpload","multipart","boundary","v4","finale","rStream","PassThrough","flush","pStream","ProgressStream","isStream","part","preamble","on","bytesRead","onUploadProgress","data","browserMultipartUpload","content","uploadType","JSON","mimeType","isBrowser","assign","product","version","comment","userAgent","map","d","line","validateStatus","status","retry","http2","authHeaders","getRequestHeaders","mooOpts","request","DefaultTransporter","Transform","constructor","arguments","_transform","chunk","encoding","emit","process","versions","node"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis-common/build/src/apirequest.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst h2 = require(\"./http2\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        typeof obj.pipe === 'function' &&\n        obj.readable !== false &&\n        typeof obj._read === 'function' &&\n        typeof obj._readableState === 'object');\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    var _a;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call with the global options configured at the API Context\n    // level, or at the global level.\n    const options = extend(true, {}, // Ensure we don't leak settings upstream\n    ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n    parameters.context._options || {}, // Per-API options\n    parameters.options // API call params\n    );\n    const params = extend(true, {}, // New base object\n    options.params, // Combined global/per-api params\n    parameters.params // API call params\n    );\n    options.userAgentDirectives = options.userAgentDirectives || [];\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This meant that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    let resource = params.requestBody;\n    if (!params.requestBody &&\n        params.resource &&\n        (!parameters.requiredParams.includes('resource') ||\n            typeof params.resource !== 'string')) {\n        resource = params.resource;\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth || options.auth;\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        options.url = urlTemplate.parse(options.url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // Rewrite url if rootUrl is globally set\n    if (parameters.context._options.rootUrl !== undefined &&\n        options.url !== undefined) {\n        const originalUrl = new URL(options.url);\n        const path = originalUrl.href.substr(originalUrl.origin.length);\n        options.url = new URL(path, parameters.context._options.rootUrl).href;\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path params from the params object so they do not end up in query\n    parameters.pathParams.forEach(param => delete params[param]);\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    function multipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        const rStream = new stream.PassThrough({\n            flush(callback) {\n                this.push('\\r\\n');\n                this.push(finale);\n                callback();\n            },\n        });\n        const pStream = new ProgressStream();\n        const isStream = isReadableStream(multipart[1].body);\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            rStream.push(preamble);\n            if (typeof part.body === 'string') {\n                rStream.push(part.body);\n                rStream.push('\\r\\n');\n            }\n            else {\n                // Gaxios does not natively support onUploadProgress in node.js.\n                // Pipe through the pStream first to read the number of bytes read\n                // for the purpose of tracking progress.\n                pStream.on('progress', bytesRead => {\n                    if (options.onUploadProgress) {\n                        options.onUploadProgress({ bytesRead });\n                    }\n                });\n                part.body.pipe(pStream).pipe(rStream);\n            }\n        }\n        if (!isStream) {\n            rStream.push(finale);\n            rStream.push(null);\n        }\n        options.data = rStream;\n    }\n    function browserMultipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        let content = '';\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            content += preamble;\n            if (typeof part.body === 'string') {\n                content += part.body;\n                content += '\\r\\n';\n            }\n        }\n        content += finale;\n        options.data = content;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'content-type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'content-type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            if (!(0, isbrowser_1.isBrowser)()) {\n                // gaxios doesn't support multipart/related uploads, so it has to\n                // be implemented here.\n                multipartUpload(multipart);\n            }\n            else {\n                browserMultipartUpload(multipart);\n            }\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'content-type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!(0, isbrowser_1.isBrowser)()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        options.userAgentDirectives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = options.userAgentDirectives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    delete options.auth; // is overridden by our auth code\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        if (options.http2) {\n            const authHeaders = await authClient.getRequestHeaders(options.url);\n            const mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return h2.request(mooOpts);\n        }\n        else {\n            return authClient.request(options);\n        }\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(options);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!(0, isbrowser_1.isBrowser)()) {\n        headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n    }\n}\n//# sourceMappingURL=apirequest.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}