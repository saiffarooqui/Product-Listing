{"ast":null,"code":"/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nrequire('./asn1');\n\nvar asn1 = forge.asn1;\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  } // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};","map":{"version":3,"names":["forge","require","asn1","exports","privateKeyValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/node-forge/lib/asn1-validator.js"],"sourcesContent":["/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACAA,OAAO,CAAC,QAAD,CAAP;;AACA,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;AAEAC,OAAO,CAACC,mBAAR,GAA8B;EAC5B;EACAC,IAAI,EAAE,gBAFsB;EAG5BC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAHO;EAI5BC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUC,QAJY;EAK5BC,WAAW,EAAE,IALe;EAM5BC,KAAK,EAAE,CAAC;IACN;IACAR,IAAI,EAAE,wBAFA;IAGNC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAHf;IAINC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUI,OAJV;IAKNF,WAAW,EAAE,KALP;IAMNG,OAAO,EAAE;EANH,CAAD,EAOJ;IACD;IACAV,IAAI,EAAE,oCAFL;IAGDC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAHpB;IAIDC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUC,QAJf;IAKDC,WAAW,EAAE,IALZ;IAMDC,KAAK,EAAE,CAAC;MACNR,IAAI,EAAE,+BADA;MAENC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAFf;MAGNC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUM,GAHV;MAINJ,WAAW,EAAE,KAJP;MAKNG,OAAO,EAAE;IALH,CAAD;EANN,CAPI,EAoBJ;IACD;IACAV,IAAI,EAAE,gBAFL;IAGDC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAHpB;IAIDC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUO,WAJf;IAKDL,WAAW,EAAE,KALZ;IAMDG,OAAO,EAAE;EANR,CApBI;AANqB,CAA9B;AAoCAZ,OAAO,CAACe,kBAAR,GAA6B;EAC3Bb,IAAI,EAAE,sBADqB;EAE3BC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAFM;EAG3BC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUC,QAHW;EAI3BC,WAAW,EAAE,IAJc;EAK3BO,WAAW,EAAE,sBALc;EAM3BN,KAAK,EAAE,CAAC;IACNR,IAAI,EAAE,0CADA;IAENC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAFf;IAGNC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUC,QAHV;IAINC,WAAW,EAAE,IAJP;IAKNC,KAAK,EAAE,CAAC;MACNR,IAAI,EAAE,+BADA;MAENC,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SAFf;MAGNC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUM,GAHV;MAINJ,WAAW,EAAE,KAJP;MAKNG,OAAO,EAAE;IALH,CAAD;EALD,CAAD,EAaP;EACA;IACET,QAAQ,EAAEJ,IAAI,CAACK,KAAL,CAAWC,SADvB;IAEEC,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUU,SAFlB;IAGER,WAAW,EAAE,KAHf;IAIES,QAAQ,EAAE,IAJZ;IAKEC,qBAAqB,EAAE;EALzB,CAdO,CAqBP;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAtCS;AANoB,CAA7B"},"metadata":{},"sourceType":"script"}