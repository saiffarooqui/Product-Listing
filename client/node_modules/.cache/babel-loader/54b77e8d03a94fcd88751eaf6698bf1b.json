{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mybusinessbusinessinformation_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar mybusinessbusinessinformation_v1;\n\n(function (mybusinessbusinessinformation_v1) {\n  /**\n   * My Business Business Information API\n   *\n   * The My Business Business Information API provides an interface for managing business information on Google.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const mybusinessbusinessinformation = google.mybusinessbusinessinformation('v1');\n   * ```\n   */\n  class Mybusinessbusinessinformation {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.attributes = new Resource$Attributes(this.context);\n      this.categories = new Resource$Categories(this.context);\n      this.chains = new Resource$Chains(this.context);\n      this.googleLocations = new Resource$Googlelocations(this.context);\n      this.locations = new Resource$Locations(this.context);\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Mybusinessbusinessinformation = Mybusinessbusinessinformation;\n\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Accounts$Locations(this.context);\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Accounts = Resource$Accounts;\n\n  class Resource$Accounts$Locations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Accounts$Locations = Resource$Accounts$Locations;\n\n  class Resource$Attributes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/attributes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Attributes = Resource$Attributes;\n\n  class Resource$Categories {\n    constructor(context) {\n      this.context = context;\n    }\n\n    batchGet(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/categories:batchGet').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/categories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Categories = Resource$Categories;\n\n  class Resource$Chains {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    search(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/chains:search').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Chains = Resource$Chains;\n\n  class Resource$Googlelocations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    search(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/googleLocations:search').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Googlelocations = Resource$Googlelocations;\n\n  class Resource$Locations {\n    constructor(context) {\n      this.context = context;\n      this.attributes = new Resource$Locations$Attributes(this.context);\n    }\n\n    associate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:associate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    clearLocationAssociation(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:clearLocationAssociation').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getAttributes(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getGoogleUpdated(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:getGoogleUpdated').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    updateAttributes(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Locations = Resource$Locations;\n\n  class Resource$Locations$Attributes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    getGoogleUpdated(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://mybusinessbusinessinformation.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:getGoogleUpdated').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  mybusinessbusinessinformation_v1.Resource$Locations$Attributes = Resource$Locations$Attributes;\n})(mybusinessbusinessinformation_v1 = exports.mybusinessbusinessinformation_v1 || (exports.mybusinessbusinessinformation_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","mybusinessbusinessinformation_v1","googleapis_common_1","require","Mybusinessbusinessinformation","constructor","options","google","context","_options","accounts","Resource$Accounts","attributes","Resource$Attributes","categories","Resource$Categories","chains","Resource$Chains","googleLocations","Resource$Googlelocations","locations","Resource$Locations","Resource$Accounts$Locations","create","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","batchGet","get","search","Resource$Locations$Attributes","associate","clearLocationAssociation","delete","getAttributes","getGoogleUpdated","patch","updateAttributes"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/mybusinessbusinessinformation/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mybusinessbusinessinformation_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar mybusinessbusinessinformation_v1;\n(function (mybusinessbusinessinformation_v1) {\n    /**\n     * My Business Business Information API\n     *\n     * The My Business Business Information API provides an interface for managing business information on Google.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const mybusinessbusinessinformation = google.mybusinessbusinessinformation('v1');\n     * ```\n     */\n    class Mybusinessbusinessinformation {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.attributes = new Resource$Attributes(this.context);\n            this.categories = new Resource$Categories(this.context);\n            this.chains = new Resource$Chains(this.context);\n            this.googleLocations = new Resource$Googlelocations(this.context);\n            this.locations = new Resource$Locations(this.context);\n        }\n    }\n    mybusinessbusinessinformation_v1.Mybusinessbusinessinformation = Mybusinessbusinessinformation;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Accounts$Locations(this.context);\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Locations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Accounts$Locations = Resource$Accounts$Locations;\n    class Resource$Attributes {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/attributes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Attributes = Resource$Attributes;\n    class Resource$Categories {\n        constructor(context) {\n            this.context = context;\n        }\n        batchGet(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/categories:batchGet').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/categories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Categories = Resource$Categories;\n    class Resource$Chains {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/chains:search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Chains = Resource$Chains;\n    class Resource$Googlelocations {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/googleLocations:search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Googlelocations = Resource$Googlelocations;\n    class Resource$Locations {\n        constructor(context) {\n            this.context = context;\n            this.attributes = new Resource$Locations$Attributes(this.context);\n        }\n        associate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:associate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        clearLocationAssociation(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:clearLocationAssociation').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getAttributes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getGoogleUpdated(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:getGoogleUpdated').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateAttributes(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Locations = Resource$Locations;\n    class Resource$Locations$Attributes {\n        constructor(context) {\n            this.context = context;\n        }\n        getGoogleUpdated(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl ||\n                'https://mybusinessbusinessinformation.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:getGoogleUpdated').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    mybusinessbusinessinformation_v1.Resource$Locations$Attributes = Resource$Locations$Attributes;\n})(mybusinessbusinessinformation_v1 = exports.mybusinessbusinessinformation_v1 || (exports.mybusinessbusinessinformation_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}