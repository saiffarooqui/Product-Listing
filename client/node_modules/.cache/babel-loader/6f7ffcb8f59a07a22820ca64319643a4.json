{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dfareporting_v3_3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar dfareporting_v3_3;\n\n(function (dfareporting_v3_3) {\n  /**\n   * Campaign Manager 360 API\n   *\n   * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const dfareporting = google.dfareporting('v3.3');\n   * ```\n   */\n  class Dfareporting {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n      this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n      this.accountPermissions = new Resource$Accountpermissions(this.context);\n      this.accounts = new Resource$Accounts(this.context);\n      this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n      this.ads = new Resource$Ads(this.context);\n      this.advertiserGroups = new Resource$Advertisergroups(this.context);\n      this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n      this.advertisers = new Resource$Advertisers(this.context);\n      this.browsers = new Resource$Browsers(this.context);\n      this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n      this.campaigns = new Resource$Campaigns(this.context);\n      this.changeLogs = new Resource$Changelogs(this.context);\n      this.cities = new Resource$Cities(this.context);\n      this.connectionTypes = new Resource$Connectiontypes(this.context);\n      this.contentCategories = new Resource$Contentcategories(this.context);\n      this.conversions = new Resource$Conversions(this.context);\n      this.countries = new Resource$Countries(this.context);\n      this.creativeAssets = new Resource$Creativeassets(this.context);\n      this.creativeFields = new Resource$Creativefields(this.context);\n      this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n      this.creativeGroups = new Resource$Creativegroups(this.context);\n      this.creatives = new Resource$Creatives(this.context);\n      this.dimensionValues = new Resource$Dimensionvalues(this.context);\n      this.directorySites = new Resource$Directorysites(this.context);\n      this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n      this.eventTags = new Resource$Eventtags(this.context);\n      this.files = new Resource$Files(this.context);\n      this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n      this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n      this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n      this.inventoryItems = new Resource$Inventoryitems(this.context);\n      this.languages = new Resource$Languages(this.context);\n      this.metros = new Resource$Metros(this.context);\n      this.mobileApps = new Resource$Mobileapps(this.context);\n      this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n      this.operatingSystems = new Resource$Operatingsystems(this.context);\n      this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n      this.orderDocuments = new Resource$Orderdocuments(this.context);\n      this.orders = new Resource$Orders(this.context);\n      this.placementGroups = new Resource$Placementgroups(this.context);\n      this.placements = new Resource$Placements(this.context);\n      this.placementStrategies = new Resource$Placementstrategies(this.context);\n      this.platformTypes = new Resource$Platformtypes(this.context);\n      this.postalCodes = new Resource$Postalcodes(this.context);\n      this.projects = new Resource$Projects(this.context);\n      this.regions = new Resource$Regions(this.context);\n      this.remarketingLists = new Resource$Remarketinglists(this.context);\n      this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n      this.reports = new Resource$Reports(this.context);\n      this.sites = new Resource$Sites(this.context);\n      this.sizes = new Resource$Sizes(this.context);\n      this.subaccounts = new Resource$Subaccounts(this.context);\n      this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n      this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n      this.userProfiles = new Resource$Userprofiles(this.context);\n      this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n      this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n      this.userRoles = new Resource$Userroles(this.context);\n      this.videoFormats = new Resource$Videoformats(this.context);\n    }\n\n  }\n\n  dfareporting_v3_3.Dfareporting = Dfareporting;\n\n  class Resource$Accountactiveadsummaries {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'summaryAccountId'],\n        pathParams: ['profileId', 'summaryAccountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n\n  class Resource$Accountpermissiongroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n\n  class Resource$Accountpermissions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Accountpermissions = Resource$Accountpermissions;\n\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Accounts = Resource$Accounts;\n\n  class Resource$Accountuserprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n\n  class Resource$Ads {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Ads = Resource$Ads;\n\n  class Resource$Advertisergroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Advertisergroups = Resource$Advertisergroups;\n\n  class Resource$Advertiserlandingpages {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n\n  class Resource$Advertisers {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Advertisers = Resource$Advertisers;\n\n  class Resource$Browsers {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Browsers = Resource$Browsers;\n\n  class Resource$Campaigncreativeassociations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'campaignId'],\n        pathParams: ['campaignId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'campaignId'],\n        pathParams: ['campaignId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n\n  class Resource$Campaigns {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Campaigns = Resource$Campaigns;\n\n  class Resource$Changelogs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Changelogs = Resource$Changelogs;\n\n  class Resource$Cities {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Cities = Resource$Cities;\n\n  class Resource$Connectiontypes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Connectiontypes = Resource$Connectiontypes;\n\n  class Resource$Contentcategories {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Contentcategories = Resource$Contentcategories;\n\n  class Resource$Conversions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Conversions = Resource$Conversions;\n\n  class Resource$Countries {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'dartId'],\n        pathParams: ['dartId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Countries = Resource$Countries;\n\n  class Resource$Creativeassets {\n    constructor(context) {\n      this.context = context;\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        mediaUrl: (rootUrl + '/upload/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['advertiserId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Creativeassets = Resource$Creativeassets;\n\n  class Resource$Creativefields {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Creativefields = Resource$Creativefields;\n\n  class Resource$Creativefieldvalues {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n\n  class Resource$Creativegroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Creativegroups = Resource$Creativegroups;\n\n  class Resource$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Creatives = Resource$Creatives;\n\n  class Resource$Dimensionvalues {\n    constructor(context) {\n      this.context = context;\n    }\n\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Dimensionvalues = Resource$Dimensionvalues;\n\n  class Resource$Directorysites {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Directorysites = Resource$Directorysites;\n\n  class Resource$Dynamictargetingkeys {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n        pathParams: ['objectId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n\n  class Resource$Eventtags {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Eventtags = Resource$Eventtags;\n\n  class Resource$Files {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['reportId', 'fileId'],\n        pathParams: ['fileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Files = Resource$Files;\n\n  class Resource$Floodlightactivities {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    generatetag(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Floodlightactivities = Resource$Floodlightactivities;\n\n  class Resource$Floodlightactivitygroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n\n  class Resource$Floodlightconfigurations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n\n  class Resource$Inventoryitems {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Inventoryitems = Resource$Inventoryitems;\n\n  class Resource$Languages {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Languages = Resource$Languages;\n\n  class Resource$Metros {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Metros = Resource$Metros;\n\n  class Resource$Mobileapps {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Mobileapps = Resource$Mobileapps;\n\n  class Resource$Mobilecarriers {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Mobilecarriers = Resource$Mobilecarriers;\n\n  class Resource$Operatingsystems {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'dartId'],\n        pathParams: ['dartId', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Operatingsystems = Resource$Operatingsystems;\n\n  class Resource$Operatingsystemversions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n\n  class Resource$Orderdocuments {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Orderdocuments = Resource$Orderdocuments;\n\n  class Resource$Orders {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Orders = Resource$Orders;\n\n  class Resource$Placementgroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Placementgroups = Resource$Placementgroups;\n\n  class Resource$Placements {\n    constructor(context) {\n      this.context = context;\n    }\n\n    generatetags(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Placements = Resource$Placements;\n\n  class Resource$Placementstrategies {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Placementstrategies = Resource$Placementstrategies;\n\n  class Resource$Platformtypes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Platformtypes = Resource$Platformtypes;\n\n  class Resource$Postalcodes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'code'],\n        pathParams: ['code', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Postalcodes = Resource$Postalcodes;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Projects = Resource$Projects;\n\n  class Resource$Regions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Regions = Resource$Regions;\n\n  class Resource$Remarketinglists {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Remarketinglists = Resource$Remarketinglists;\n\n  class Resource$Remarketinglistshares {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'remarketingListId'],\n        pathParams: ['profileId', 'remarketingListId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n\n  class Resource$Reports {\n    constructor(context) {\n      this.context = context;\n      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n      this.files = new Resource$Reports$Files(this.context);\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    run(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Reports = Resource$Reports;\n\n  class Resource$Reports$Compatiblefields {\n    constructor(context) {\n      this.context = context;\n    }\n\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n\n  class Resource$Reports$Files {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId', 'fileId'],\n        pathParams: ['fileId', 'profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Reports$Files = Resource$Reports$Files;\n\n  class Resource$Sites {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Sites = Resource$Sites;\n\n  class Resource$Sizes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Sizes = Resource$Sizes;\n\n  class Resource$Subaccounts {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Subaccounts = Resource$Subaccounts;\n\n  class Resource$Targetableremarketinglists {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n\n  class Resource$Targetingtemplates {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Targetingtemplates = Resource$Targetingtemplates;\n\n  class Resource$Userprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Userprofiles = Resource$Userprofiles;\n\n  class Resource$Userrolepermissiongroups {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n\n  class Resource$Userrolepermissions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Userrolepermissions = Resource$Userrolepermissions;\n\n  class Resource$Userroles {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Userroles = Resource$Userroles;\n\n  class Resource$Videoformats {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  dfareporting_v3_3.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_3 = exports.dfareporting_v3_3 || (exports.dfareporting_v3_3 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","dfareporting_v3_3","googleapis_common_1","require","Dfareporting","constructor","options","google","context","_options","accountActiveAdSummaries","Resource$Accountactiveadsummaries","accountPermissionGroups","Resource$Accountpermissiongroups","accountPermissions","Resource$Accountpermissions","accounts","Resource$Accounts","accountUserProfiles","Resource$Accountuserprofiles","ads","Resource$Ads","advertiserGroups","Resource$Advertisergroups","advertiserLandingPages","Resource$Advertiserlandingpages","advertisers","Resource$Advertisers","browsers","Resource$Browsers","campaignCreativeAssociations","Resource$Campaigncreativeassociations","campaigns","Resource$Campaigns","changeLogs","Resource$Changelogs","cities","Resource$Cities","connectionTypes","Resource$Connectiontypes","contentCategories","Resource$Contentcategories","conversions","Resource$Conversions","countries","Resource$Countries","creativeAssets","Resource$Creativeassets","creativeFields","Resource$Creativefields","creativeFieldValues","Resource$Creativefieldvalues","creativeGroups","Resource$Creativegroups","creatives","Resource$Creatives","dimensionValues","Resource$Dimensionvalues","directorySites","Resource$Directorysites","dynamicTargetingKeys","Resource$Dynamictargetingkeys","eventTags","Resource$Eventtags","files","Resource$Files","floodlightActivities","Resource$Floodlightactivities","floodlightActivityGroups","Resource$Floodlightactivitygroups","floodlightConfigurations","Resource$Floodlightconfigurations","inventoryItems","Resource$Inventoryitems","languages","Resource$Languages","metros","Resource$Metros","mobileApps","Resource$Mobileapps","mobileCarriers","Resource$Mobilecarriers","operatingSystems","Resource$Operatingsystems","operatingSystemVersions","Resource$Operatingsystemversions","orderDocuments","Resource$Orderdocuments","orders","Resource$Orders","placementGroups","Resource$Placementgroups","placements","Resource$Placements","placementStrategies","Resource$Placementstrategies","platformTypes","Resource$Platformtypes","postalCodes","Resource$Postalcodes","projects","Resource$Projects","regions","Resource$Regions","remarketingLists","Resource$Remarketinglists","remarketingListShares","Resource$Remarketinglistshares","reports","Resource$Reports","sites","Resource$Sites","sizes","Resource$Sizes","subaccounts","Resource$Subaccounts","targetableRemarketingLists","Resource$Targetableremarketinglists","targetingTemplates","Resource$Targetingtemplates","userProfiles","Resource$Userprofiles","userRolePermissionGroups","Resource$Userrolepermissiongroups","userRolePermissions","Resource$Userrolepermissions","userRoles","Resource$Userroles","videoFormats","Resource$Videoformats","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","patch","update","insert","delete","batchinsert","batchupdate","mediaUrl","query","generatetag","generatetags","compatibleFields","Resource$Reports$Compatiblefields","Resource$Reports$Files","run"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/dfareporting/v3.3.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dfareporting_v3_3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar dfareporting_v3_3;\n(function (dfareporting_v3_3) {\n    /**\n     * Campaign Manager 360 API\n     *\n     * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const dfareporting = google.dfareporting('v3.3');\n     * ```\n     */\n    class Dfareporting {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n            this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n            this.accountPermissions = new Resource$Accountpermissions(this.context);\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n            this.ads = new Resource$Ads(this.context);\n            this.advertiserGroups = new Resource$Advertisergroups(this.context);\n            this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.browsers = new Resource$Browsers(this.context);\n            this.campaignCreativeAssociations =\n                new Resource$Campaigncreativeassociations(this.context);\n            this.campaigns = new Resource$Campaigns(this.context);\n            this.changeLogs = new Resource$Changelogs(this.context);\n            this.cities = new Resource$Cities(this.context);\n            this.connectionTypes = new Resource$Connectiontypes(this.context);\n            this.contentCategories = new Resource$Contentcategories(this.context);\n            this.conversions = new Resource$Conversions(this.context);\n            this.countries = new Resource$Countries(this.context);\n            this.creativeAssets = new Resource$Creativeassets(this.context);\n            this.creativeFields = new Resource$Creativefields(this.context);\n            this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n            this.creativeGroups = new Resource$Creativegroups(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.dimensionValues = new Resource$Dimensionvalues(this.context);\n            this.directorySites = new Resource$Directorysites(this.context);\n            this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n            this.eventTags = new Resource$Eventtags(this.context);\n            this.files = new Resource$Files(this.context);\n            this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n            this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n            this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n            this.inventoryItems = new Resource$Inventoryitems(this.context);\n            this.languages = new Resource$Languages(this.context);\n            this.metros = new Resource$Metros(this.context);\n            this.mobileApps = new Resource$Mobileapps(this.context);\n            this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n            this.operatingSystems = new Resource$Operatingsystems(this.context);\n            this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n            this.orderDocuments = new Resource$Orderdocuments(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.placementGroups = new Resource$Placementgroups(this.context);\n            this.placements = new Resource$Placements(this.context);\n            this.placementStrategies = new Resource$Placementstrategies(this.context);\n            this.platformTypes = new Resource$Platformtypes(this.context);\n            this.postalCodes = new Resource$Postalcodes(this.context);\n            this.projects = new Resource$Projects(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.remarketingLists = new Resource$Remarketinglists(this.context);\n            this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.sites = new Resource$Sites(this.context);\n            this.sizes = new Resource$Sizes(this.context);\n            this.subaccounts = new Resource$Subaccounts(this.context);\n            this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n            this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n            this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n            this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n            this.userRoles = new Resource$Userroles(this.context);\n            this.videoFormats = new Resource$Videoformats(this.context);\n        }\n    }\n    dfareporting_v3_3.Dfareporting = Dfareporting;\n    class Resource$Accountactiveadsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'summaryAccountId'],\n                pathParams: ['profileId', 'summaryAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n    class Resource$Accountpermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n    class Resource$Accountpermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountpermissions = Resource$Accountpermissions;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountuserprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n    class Resource$Ads {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Ads = Resource$Ads;\n    class Resource$Advertisergroups {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertisergroups = Resource$Advertisergroups;\n    class Resource$Advertiserlandingpages {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Browsers {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Browsers = Resource$Browsers;\n    class Resource$Campaigncreativeassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n    class Resource$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Campaigns = Resource$Campaigns;\n    class Resource$Changelogs {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Changelogs = Resource$Changelogs;\n    class Resource$Cities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Cities = Resource$Cities;\n    class Resource$Connectiontypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Connectiontypes = Resource$Connectiontypes;\n    class Resource$Contentcategories {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Contentcategories = Resource$Contentcategories;\n    class Resource$Conversions {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Conversions = Resource$Conversions;\n    class Resource$Countries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Countries = Resource$Countries;\n    class Resource$Creativeassets {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/dfareporting/v3.3/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativeassets = Resource$Creativeassets;\n    class Resource$Creativefields {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativefields = Resource$Creativefields;\n    class Resource$Creativefieldvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n    class Resource$Creativegroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creativegroups = Resource$Creativegroups;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Creatives = Resource$Creatives;\n    class Resource$Dimensionvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Dimensionvalues = Resource$Dimensionvalues;\n    class Resource$Directorysites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Directorysites = Resource$Directorysites;\n    class Resource$Dynamictargetingkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n                pathParams: ['objectId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n    class Resource$Eventtags {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Eventtags = Resource$Eventtags;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['reportId', 'fileId'],\n                pathParams: ['fileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Files = Resource$Files;\n    class Resource$Floodlightactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        generatetag(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightactivities = Resource$Floodlightactivities;\n    class Resource$Floodlightactivitygroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n    class Resource$Floodlightconfigurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n    class Resource$Inventoryitems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Inventoryitems = Resource$Inventoryitems;\n    class Resource$Languages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Languages = Resource$Languages;\n    class Resource$Metros {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Metros = Resource$Metros;\n    class Resource$Mobileapps {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Mobileapps = Resource$Mobileapps;\n    class Resource$Mobilecarriers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Mobilecarriers = Resource$Mobilecarriers;\n    class Resource$Operatingsystems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Operatingsystems = Resource$Operatingsystems;\n    class Resource$Operatingsystemversions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n    class Resource$Orderdocuments {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Orderdocuments = Resource$Orderdocuments;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Orders = Resource$Orders;\n    class Resource$Placementgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placementgroups = Resource$Placementgroups;\n    class Resource$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        generatetags(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placements = Resource$Placements;\n    class Resource$Placementstrategies {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Placementstrategies = Resource$Placementstrategies;\n    class Resource$Platformtypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Platformtypes = Resource$Platformtypes;\n    class Resource$Postalcodes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'code'],\n                pathParams: ['code', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Postalcodes = Resource$Postalcodes;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Projects = Resource$Projects;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Regions = Resource$Regions;\n    class Resource$Remarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Remarketinglists = Resource$Remarketinglists;\n    class Resource$Remarketinglistshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId', 'remarketingListId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n            this.files = new Resource$Reports$Files(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Compatiblefields {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n    class Resource$Reports$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId', 'fileId'],\n                pathParams: ['fileId', 'profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Reports$Files = Resource$Reports$Files;\n    class Resource$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Sites = Resource$Sites;\n    class Resource$Sizes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Sizes = Resource$Sizes;\n    class Resource$Subaccounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Subaccounts = Resource$Subaccounts;\n    class Resource$Targetableremarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n    class Resource$Targetingtemplates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Targetingtemplates = Resource$Targetingtemplates;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userrolepermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n    class Resource$Userrolepermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userrolepermissions = Resource$Userrolepermissions;\n    class Resource$Userroles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v3.3/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Userroles = Resource$Userroles;\n    class Resource$Videoformats {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v3.3/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v3_3.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v3_3 = exports.dfareporting_v3_3 || (exports.dfareporting_v3_3 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}