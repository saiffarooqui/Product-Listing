{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adsense_v1_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar adsense_v1_4;\n\n(function (adsense_v1_4) {\n  /**\n   * AdSense Management API\n   *\n   * Accesses AdSense publishers&#39; inventory and generates performance reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const adsense = google.adsense('v1.4');\n   * ```\n   */\n  class Adsense {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.adclients = new Resource$Adclients(this.context);\n      this.adunits = new Resource$Adunits(this.context);\n      this.alerts = new Resource$Alerts(this.context);\n      this.customchannels = new Resource$Customchannels(this.context);\n      this.metadata = new Resource$Metadata(this.context);\n      this.payments = new Resource$Payments(this.context);\n      this.reports = new Resource$Reports(this.context);\n      this.savedadstyles = new Resource$Savedadstyles(this.context);\n      this.urlchannels = new Resource$Urlchannels(this.context);\n    }\n\n  }\n\n  adsense_v1_4.Adsense = Adsense;\n\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.adclients = new Resource$Accounts$Adclients(this.context);\n      this.adunits = new Resource$Accounts$Adunits(this.context);\n      this.alerts = new Resource$Accounts$Alerts(this.context);\n      this.customchannels = new Resource$Accounts$Customchannels(this.context);\n      this.payments = new Resource$Accounts$Payments(this.context);\n      this.reports = new Resource$Accounts$Reports(this.context);\n      this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n      this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts = Resource$Accounts;\n\n  class Resource$Accounts$Adclients {\n    constructor(context) {\n      this.context = context;\n    }\n\n    getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId'],\n        pathParams: ['accountId', 'adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n\n  class Resource$Accounts$Adunits {\n    constructor(context) {\n      this.context = context;\n      this.customchannels = new Resource$Accounts$Adunits$Customchannels(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n        pathParams: ['accountId', 'adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n        pathParams: ['accountId', 'adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId'],\n        pathParams: ['accountId', 'adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n\n  class Resource$Accounts$Adunits$Customchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n        pathParams: ['accountId', 'adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n\n  class Resource$Accounts$Alerts {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'alertId'],\n        pathParams: ['accountId', 'alertId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n\n  class Resource$Accounts$Customchannels {\n    constructor(context) {\n      this.context = context;\n      this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n        pathParams: ['accountId', 'adClientId', 'customChannelId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId'],\n        pathParams: ['accountId', 'adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n\n  class Resource$Accounts$Customchannels$Adunits {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n        pathParams: ['accountId', 'adClientId', 'customChannelId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n\n  class Resource$Accounts$Payments {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n\n  class Resource$Accounts$Reports {\n    constructor(context) {\n      this.context = context;\n      this.saved = new Resource$Accounts$Reports$Saved(this.context);\n    }\n\n    generate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'startDate', 'endDate'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n\n  class Resource$Accounts$Reports$Saved {\n    constructor(context) {\n      this.context = context;\n    }\n\n    generate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'savedReportId'],\n        pathParams: ['accountId', 'savedReportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n\n  class Resource$Accounts$Savedadstyles {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'savedAdStyleId'],\n        pathParams: ['accountId', 'savedAdStyleId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n\n  class Resource$Accounts$Urlchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'adClientId'],\n        pathParams: ['accountId', 'adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n\n  class Resource$Adclients {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Adclients = Resource$Adclients;\n\n  class Resource$Adunits {\n    constructor(context) {\n      this.context = context;\n      this.customchannels = new Resource$Adunits$Customchannels(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId', 'adUnitId'],\n        pathParams: ['adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId', 'adUnitId'],\n        pathParams: ['adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId'],\n        pathParams: ['adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Adunits = Resource$Adunits;\n\n  class Resource$Adunits$Customchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId', 'adUnitId'],\n        pathParams: ['adClientId', 'adUnitId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n\n  class Resource$Alerts {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['alertId'],\n        pathParams: ['alertId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Alerts = Resource$Alerts;\n\n  class Resource$Customchannels {\n    constructor(context) {\n      this.context = context;\n      this.adunits = new Resource$Customchannels$Adunits(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId', 'customChannelId'],\n        pathParams: ['adClientId', 'customChannelId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId'],\n        pathParams: ['adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n\n  class Resource$Customchannels$Adunits {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId', 'customChannelId'],\n        pathParams: ['adClientId', 'customChannelId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n\n  class Resource$Metadata {\n    constructor(context) {\n      this.context = context;\n      this.dimensions = new Resource$Metadata$Dimensions(this.context);\n      this.metrics = new Resource$Metadata$Metrics(this.context);\n    }\n\n  }\n\n  adsense_v1_4.Resource$Metadata = Resource$Metadata;\n\n  class Resource$Metadata$Dimensions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/metadata/dimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n\n  class Resource$Metadata$Metrics {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/metadata/metrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n\n  class Resource$Payments {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Payments = Resource$Payments;\n\n  class Resource$Reports {\n    constructor(context) {\n      this.context = context;\n      this.saved = new Resource$Reports$Saved(this.context);\n    }\n\n    generate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['startDate', 'endDate'],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Reports = Resource$Reports;\n\n  class Resource$Reports$Saved {\n    constructor(context) {\n      this.context = context;\n    }\n\n    generate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['savedReportId'],\n        pathParams: ['savedReportId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n\n  class Resource$Savedadstyles {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['savedAdStyleId'],\n        pathParams: ['savedAdStyleId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n\n  class Resource$Urlchannels {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['adClientId'],\n        pathParams: ['adClientId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","adsense_v1_4","googleapis_common_1","require","Adsense","constructor","options","google","context","_options","accounts","Resource$Accounts","adclients","Resource$Adclients","adunits","Resource$Adunits","alerts","Resource$Alerts","customchannels","Resource$Customchannels","metadata","Resource$Metadata","payments","Resource$Payments","reports","Resource$Reports","savedadstyles","Resource$Savedadstyles","urlchannels","Resource$Urlchannels","Resource$Accounts$Adclients","Resource$Accounts$Adunits","Resource$Accounts$Alerts","Resource$Accounts$Customchannels","Resource$Accounts$Payments","Resource$Accounts$Reports","Resource$Accounts$Savedadstyles","Resource$Accounts$Urlchannels","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","getAdCode","Resource$Accounts$Adunits$Customchannels","delete","Resource$Accounts$Customchannels$Adunits","saved","Resource$Accounts$Reports$Saved","generate","Resource$Adunits$Customchannels","Resource$Customchannels$Adunits","dimensions","Resource$Metadata$Dimensions","metrics","Resource$Metadata$Metrics","Resource$Reports$Saved"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/adsense/v1.4.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adsense_v1_4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adsense_v1_4;\n(function (adsense_v1_4) {\n    /**\n     * AdSense Management API\n     *\n     * Accesses AdSense publishers&#39; inventory and generates performance reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const adsense = google.adsense('v1.4');\n     * ```\n     */\n    class Adsense {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.adclients = new Resource$Adclients(this.context);\n            this.adunits = new Resource$Adunits(this.context);\n            this.alerts = new Resource$Alerts(this.context);\n            this.customchannels = new Resource$Customchannels(this.context);\n            this.metadata = new Resource$Metadata(this.context);\n            this.payments = new Resource$Payments(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.savedadstyles = new Resource$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Urlchannels(this.context);\n        }\n    }\n    adsense_v1_4.Adsense = Adsense;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.adclients = new Resource$Accounts$Adclients(this.context);\n            this.adunits = new Resource$Accounts$Adunits(this.context);\n            this.alerts = new Resource$Accounts$Alerts(this.context);\n            this.customchannels = new Resource$Accounts$Customchannels(this.context);\n            this.payments = new Resource$Accounts$Payments(this.context);\n            this.reports = new Resource$Accounts$Reports(this.context);\n            this.savedadstyles = new Resource$Accounts$Savedadstyles(this.context);\n            this.urlchannels = new Resource$Accounts$Urlchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adclients = Resource$Accounts$Adclients;\n    class Resource$Accounts$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels = new Resource$Accounts$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits = Resource$Accounts$Adunits;\n    class Resource$Accounts$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'adUnitId'],\n                pathParams: ['accountId', 'adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Adunits$Customchannels = Resource$Accounts$Adunits$Customchannels;\n    class Resource$Accounts$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'alertId'],\n                pathParams: ['accountId', 'alertId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Alerts = Resource$Accounts$Alerts;\n    class Resource$Accounts$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Accounts$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels = Resource$Accounts$Customchannels;\n    class Resource$Accounts$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId', 'customChannelId'],\n                pathParams: ['accountId', 'adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Customchannels$Adunits = Resource$Accounts$Customchannels$Adunits;\n    class Resource$Accounts$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Payments = Resource$Accounts$Payments;\n    class Resource$Accounts$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Accounts$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'startDate', 'endDate'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports = Resource$Accounts$Reports;\n    class Resource$Accounts$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedReportId'],\n                pathParams: ['accountId', 'savedReportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Reports$Saved = Resource$Accounts$Reports$Saved;\n    class Resource$Accounts$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'savedAdStyleId'],\n                pathParams: ['accountId', 'savedAdStyleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/accounts/{accountId}/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Savedadstyles = Resource$Accounts$Savedadstyles;\n    class Resource$Accounts$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/accounts/{accountId}/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'adClientId'],\n                pathParams: ['accountId', 'adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Accounts$Urlchannels = Resource$Accounts$Urlchannels;\n    class Resource$Adclients {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adclients = Resource$Adclients;\n    class Resource$Adunits {\n        constructor(context) {\n            this.context = context;\n            this.customchannels = new Resource$Adunits$Customchannels(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getAdCode(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/adcode').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits = Resource$Adunits;\n    class Resource$Adunits$Customchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/adunits/{adUnitId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'adUnitId'],\n                pathParams: ['adClientId', 'adUnitId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Adunits$Customchannels = Resource$Adunits$Customchannels;\n    class Resource$Alerts {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts/{alertId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['alertId'],\n                pathParams: ['alertId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/alerts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Alerts = Resource$Alerts;\n    class Resource$Customchannels {\n        constructor(context) {\n            this.context = context;\n            this.adunits = new Resource$Customchannels$Adunits(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/customchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels = Resource$Customchannels;\n    class Resource$Customchannels$Adunits {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adsense/v1.4/adclients/{adClientId}/customchannels/{customChannelId}/adunits').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId', 'customChannelId'],\n                pathParams: ['adClientId', 'customChannelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Customchannels$Adunits = Resource$Customchannels$Adunits;\n    class Resource$Metadata {\n        constructor(context) {\n            this.context = context;\n            this.dimensions = new Resource$Metadata$Dimensions(this.context);\n            this.metrics = new Resource$Metadata$Metrics(this.context);\n        }\n    }\n    adsense_v1_4.Resource$Metadata = Resource$Metadata;\n    class Resource$Metadata$Dimensions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/dimensions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Dimensions = Resource$Metadata$Dimensions;\n    class Resource$Metadata$Metrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/metadata/metrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Metadata$Metrics = Resource$Metadata$Metrics;\n    class Resource$Payments {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/payments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Payments = Resource$Payments;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.saved = new Resource$Reports$Saved(this.context);\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['startDate', 'endDate'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Saved {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/{savedReportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['savedReportId'],\n                pathParams: ['savedReportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/reports/saved').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Reports$Saved = Resource$Reports$Saved;\n    class Resource$Savedadstyles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles/{savedAdStyleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['savedAdStyleId'],\n                pathParams: ['savedAdStyleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/savedadstyles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Savedadstyles = Resource$Savedadstyles;\n    class Resource$Urlchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adsense/v1.4/adclients/{adClientId}/urlchannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['adClientId'],\n                pathParams: ['adClientId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adsense_v1_4.Resource$Urlchannels = Resource$Urlchannels;\n})(adsense_v1_4 = exports.adsense_v1_4 || (exports.adsense_v1_4 = {}));\n"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,IAAIF,YAAJ;;AACA,CAAC,UAAUA,YAAV,EAAwB;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,OAAN,CAAc;IACVC,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;MACzB,KAAKC,OAAL,GAAe;QACXC,QAAQ,EAAEH,OAAO,IAAI,EADV;QAEXC;MAFW,CAAf;MAIA,KAAKG,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKH,OAA3B,CAAhB;MACA,KAAKI,SAAL,GAAiB,IAAIC,kBAAJ,CAAuB,KAAKL,OAA5B,CAAjB;MACA,KAAKM,OAAL,GAAe,IAAIC,gBAAJ,CAAqB,KAAKP,OAA1B,CAAf;MACA,KAAKQ,MAAL,GAAc,IAAIC,eAAJ,CAAoB,KAAKT,OAAzB,CAAd;MACA,KAAKU,cAAL,GAAsB,IAAIC,uBAAJ,CAA4B,KAAKX,OAAjC,CAAtB;MACA,KAAKY,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKb,OAA3B,CAAhB;MACA,KAAKc,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKf,OAA3B,CAAhB;MACA,KAAKgB,OAAL,GAAe,IAAIC,gBAAJ,CAAqB,KAAKjB,OAA1B,CAAf;MACA,KAAKkB,aAAL,GAAqB,IAAIC,sBAAJ,CAA2B,KAAKnB,OAAhC,CAArB;MACA,KAAKoB,WAAL,GAAmB,IAAIC,oBAAJ,CAAyB,KAAKrB,OAA9B,CAAnB;IACH;;EAhBS;;EAkBdP,YAAY,CAACG,OAAb,GAAuBA,OAAvB;;EACA,MAAMO,iBAAN,CAAwB;IACpBN,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKI,SAAL,GAAiB,IAAIkB,2BAAJ,CAAgC,KAAKtB,OAArC,CAAjB;MACA,KAAKM,OAAL,GAAe,IAAIiB,yBAAJ,CAA8B,KAAKvB,OAAnC,CAAf;MACA,KAAKQ,MAAL,GAAc,IAAIgB,wBAAJ,CAA6B,KAAKxB,OAAlC,CAAd;MACA,KAAKU,cAAL,GAAsB,IAAIe,gCAAJ,CAAqC,KAAKzB,OAA1C,CAAtB;MACA,KAAKc,QAAL,GAAgB,IAAIY,0BAAJ,CAA+B,KAAK1B,OAApC,CAAhB;MACA,KAAKgB,OAAL,GAAe,IAAIW,yBAAJ,CAA8B,KAAK3B,OAAnC,CAAf;MACA,KAAKkB,aAAL,GAAqB,IAAIU,+BAAJ,CAAoC,KAAK5B,OAAzC,CAArB;MACA,KAAKoB,WAAL,GAAmB,IAAIS,6BAAJ,CAAkC,KAAK7B,OAAvC,CAAnB;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,oCAAX,EAAiDI,OAAjD,CAAyD,cAAzD,EAAyE,IAAzE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,wBAAX,EAAqCI,OAArC,CAA6C,cAA7C,EAA6D,IAA7D,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAvEmB;;EAyExB3C,YAAY,CAACU,iBAAb,GAAiCA,iBAAjC;;EACA,MAAMmB,2BAAN,CAAkC;IAC9BzB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD6C,SAAS,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACrD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EACmEI,OADnE,CAC2E,cAD3E,EAC2F,IAD3F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,8CAAX,EAA2DI,OAA3D,CAAmE,cAAnE,EAAmF,IAAnF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlE6B;;EAoElC3C,YAAY,CAAC6B,2BAAb,GAA2CA,2BAA3C;;EACA,MAAMC,yBAAN,CAAgC;IAC5B1B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKU,cAAL,GAAsB,IAAIoC,wCAAJ,CAA6C,KAAK9C,OAAlD,CAAtB;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,8EADC,EAC+EI,OAD/E,CACuF,cADvF,EACuG,IADvG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDS,SAAS,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACrD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,qFADC,EACsFI,OADtF,CAC8F,cAD9F,EAC8G,IAD9G,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,mEADC,EACoEI,OADpE,CAC4E,cAD5E,EAC4F,IAD5F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EApG2B;;EAsGhC3C,YAAY,CAAC8B,yBAAb,GAAyCA,yBAAzC;;EACA,MAAMuB,wCAAN,CAA+C;IAC3CjD,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,6FADC,EAC8FI,OAD9F,CACsG,cADtG,EACsH,IADtH,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnC0C;;EAqC/C3C,YAAY,CAACqD,wCAAb,GAAwDA,wCAAxD;;EACA,MAAMtB,wBAAN,CAA+B;IAC3B3B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD+C,MAAM,CAAChB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,qDAAX,EAAkEI,OAAlE,CAA0E,cAA1E,EAA0F,IAA1F,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,EAAc,SAAd,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,2CAAX,EAAwDI,OAAxD,CAAgE,cAAhE,EAAgF,IAAhF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjE0B;;EAmE/B3C,YAAY,CAAC+B,wBAAb,GAAwCA,wBAAxC;;EACA,MAAMC,gCAAN,CAAuC;IACnC5B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKM,OAAL,GAAe,IAAI0C,wCAAJ,CAA6C,KAAKhD,OAAlD,CAAf;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,4FADC,EAC6FI,OAD7F,CACqG,cADrG,EACqH,IADrH,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,iBAA5B,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,iBAA5B,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,0EADC,EAC2EI,OAD3E,CACmF,cADnF,EACmG,IADnG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EApEkC;;EAsEvC3C,YAAY,CAACgC,gCAAb,GAAgDA,gCAAhD;;EACA,MAAMuB,wCAAN,CAA+C;IAC3CnD,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,oGADC,EACqGI,OADrG,CAC6G,cAD7G,EAC6H,IAD7H,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,iBAA5B,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,iBAA5B,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnC0C;;EAqC/C3C,YAAY,CAACuD,wCAAb,GAAwDA,wCAAxD;;EACA,MAAMtB,0BAAN,CAAiC;IAC7B7B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,6CAAX,EAA0DI,OAA1D,CAAkE,cAAlE,EAAkF,IAAlF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlC4B;;EAoCjC3C,YAAY,CAACiC,0BAAb,GAA0CA,0BAA1C;;EACA,MAAMC,yBAAN,CAAgC;IAC5B9B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKiD,KAAL,GAAa,IAAIC,+BAAJ,CAAoC,KAAKlD,OAAzC,CAAb;IACH;;IACDmD,QAAQ,CAACpB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACpD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,4CAAX,EAAyDI,OAAzD,CAAiE,cAAjE,EAAiF,IAAjF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnC2B;;EAqChC3C,YAAY,CAACkC,yBAAb,GAAyCA,yBAAzC;;EACA,MAAMuB,+BAAN,CAAsC;IAClCrD,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDmD,QAAQ,CAACpB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACpD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,4DADC,EAC6DI,OAD7D,CACqE,cADrE,EACqF,IADrF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,eAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,eAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,kDAAX,EAA+DI,OAA/D,CAAuE,cAAvE,EAAuF,IAAvF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlEiC;;EAoEtC3C,YAAY,CAACyD,+BAAb,GAA+CA,+BAA/C;;EACA,MAAMtB,+BAAN,CAAsC;IAClC/B,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,mEADC,EACoEI,OADpE,CAC4E,cAD5E,EAC4F,IAD5F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,gBAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,gBAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,kDAAX,EAA+DI,OAA/D,CAAuE,cAAvE,EAAuF,IAAvF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlEiC;;EAoEtC3C,YAAY,CAACmC,+BAAb,GAA+CA,+BAA/C;;EACA,MAAMC,6BAAN,CAAoC;IAChChC,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,uEADC,EACwEI,OADxE,CACgF,cADhF,EACgG,IADhG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,YAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnC+B;;EAqCpC3C,YAAY,CAACoC,6BAAb,GAA6CA,6BAA7C;;EACA,MAAMxB,kBAAN,CAAyB;IACrBR,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,yBAAX,EAAsCI,OAAtC,CAA8C,cAA9C,EAA8D,IAA9D,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjCoB;;EAmCzB3C,YAAY,CAACY,kBAAb,GAAkCA,kBAAlC;;EACA,MAAME,gBAAN,CAAuB;IACnBV,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKU,cAAL,GAAsB,IAAI0C,+BAAJ,CAAoC,KAAKpD,OAAzC,CAAtB;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,yDADC,EAC0DI,OAD1D,CACkE,cADlE,EACkF,IADlF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,YAAD,EAAe,UAAf,CAPD;QAQfC,UAAU,EAAE,CAAC,YAAD,EAAe,UAAf,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDS,SAAS,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACrD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,gEADC,EACiEI,OADjE,CACyE,cADzE,EACyF,IADzF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,YAAD,EAAe,UAAf,CAPD;QAQfC,UAAU,EAAE,CAAC,YAAD,EAAe,UAAf,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,8CAAX,EAA2DI,OAA3D,CAAmE,cAAnE,EAAmF,IAAnF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,YAAD,CAND;QAOfC,UAAU,EAAE,CAAC,YAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjGkB;;EAmGvB3C,YAAY,CAACc,gBAAb,GAAgCA,gBAAhC;;EACA,MAAM6C,+BAAN,CAAsC;IAClCvD,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,wEADC,EACyEI,OADzE,CACiF,cADjF,EACiG,IADjG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,YAAD,EAAe,UAAf,CAPD;QAQfC,UAAU,EAAE,CAAC,YAAD,EAAe,UAAf,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnCiC;;EAqCtC3C,YAAY,CAAC2D,+BAAb,GAA+CA,+BAA/C;;EACA,MAAM3C,eAAN,CAAsB;IAClBZ,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD+C,MAAM,CAAChB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,gCAAX,EAA6CI,OAA7C,CAAqD,cAArD,EAAqE,IAArE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,SAAD,CAND;QAOfC,UAAU,EAAE,CAAC,SAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,sBAAX,EAAmCI,OAAnC,CAA2C,cAA3C,EAA2D,IAA3D,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EA/DiB;;EAiEtB3C,YAAY,CAACgB,eAAb,GAA+BA,eAA/B;;EACA,MAAME,uBAAN,CAA8B;IAC1Bd,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKM,OAAL,GAAe,IAAI+C,+BAAJ,CAAoC,KAAKrD,OAAzC,CAAf;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,uEADC,EACwEI,OADxE,CACgF,cADhF,EACgG,IADhG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,YAAD,EAAe,iBAAf,CAPD;QAQfC,UAAU,EAAE,CAAC,YAAD,EAAe,iBAAf,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,qDAAX,EAAkEI,OAAlE,CAA0E,cAA1E,EAA0F,IAA1F,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,YAAD,CAND;QAOfC,UAAU,EAAE,CAAC,YAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnEyB;;EAqE9B3C,YAAY,CAACkB,uBAAb,GAAuCA,uBAAvC;;EACA,MAAM0C,+BAAN,CAAsC;IAClCxD,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,+EADC,EACgFI,OADhF,CACwF,cADxF,EACwG,IADxG,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN1C,OAJM,CADM;QAMfoC,MANe;QAOfO,cAAc,EAAE,CAAC,YAAD,EAAe,iBAAf,CAPD;QAQfC,UAAU,EAAE,CAAC,YAAD,EAAe,iBAAf,CARG;QASf1C,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAnCiC;;EAqCtC3C,YAAY,CAAC4D,+BAAb,GAA+CA,+BAA/C;;EACA,MAAMxC,iBAAN,CAAwB;IACpBhB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKsD,UAAL,GAAkB,IAAIC,4BAAJ,CAAiC,KAAKvD,OAAtC,CAAlB;MACA,KAAKwD,OAAL,GAAe,IAAIC,yBAAJ,CAA8B,KAAKzD,OAAnC,CAAf;IACH;;EALmB;;EAOxBP,YAAY,CAACoB,iBAAb,GAAiCA,iBAAjC;;EACA,MAAM0C,4BAAN,CAAmC;IAC/B1D,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,mCAAX,EAAgDI,OAAhD,CAAwD,cAAxD,EAAwE,IAAxE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlC8B;;EAoCnC3C,YAAY,CAAC8D,4BAAb,GAA4CA,4BAA5C;;EACA,MAAME,yBAAN,CAAgC;IAC5B5D,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,gCAAX,EAA6CI,OAA7C,CAAqD,cAArD,EAAqE,IAArE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlC2B;;EAoChC3C,YAAY,CAACgE,yBAAb,GAAyCA,yBAAzC;;EACA,MAAM1C,iBAAN,CAAwB;IACpBlB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,wBAAX,EAAqCI,OAArC,CAA6C,cAA7C,EAA6D,IAA7D,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjCmB;;EAmCxB3C,YAAY,CAACsB,iBAAb,GAAiCA,iBAAjC;;EACA,MAAME,gBAAN,CAAuB;IACnBpB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKiD,KAAL,GAAa,IAAIS,sBAAJ,CAA2B,KAAK1D,OAAhC,CAAb;IACH;;IACDmD,QAAQ,CAACpB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACpD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,uBAAX,EAAoCI,OAApC,CAA4C,cAA5C,EAA4D,IAA5D,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,EAAc,SAAd,CAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlCkB;;EAoCvB3C,YAAY,CAACwB,gBAAb,GAAgCA,gBAAhC;;EACA,MAAMyC,sBAAN,CAA6B;IACzB7D,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDmD,QAAQ,CAACpB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACpD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,uCAAX,EAAoDI,OAApD,CAA4D,cAA5D,EAA4E,IAA5E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,eAAD,CAND;QAOfC,UAAU,EAAE,CAAC,eAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,6BAAX,EAA0CI,OAA1C,CAAkD,cAAlD,EAAkE,IAAlE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjEwB;;EAmE7B3C,YAAY,CAACiE,sBAAb,GAAsCA,sBAAtC;;EACA,MAAMvC,sBAAN,CAA6B;IACzBtB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD8B,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,8CAAX,EAA2DI,OAA3D,CAAmE,cAAnE,EAAmF,IAAnF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,gBAAD,CAND;QAOfC,UAAU,EAAE,CAAC,gBAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,6BAAX,EAA0CI,OAA1C,CAAkD,cAAlD,EAAkE,IAAlE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjEwB;;EAmE7B3C,YAAY,CAAC0B,sBAAb,GAAsCA,sBAAtC;;EACA,MAAME,oBAAN,CAA2B;IACvBxB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD4C,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAIjC,OAAO,GAAIkC,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACApC,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOkC,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACAlC,OAAO,GAAG,EAAV;MACH;;MACD,MAAMqC,OAAO,GAAGrC,OAAO,CAACqC,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACftC,OAAO,EAAET,MAAM,CAACgD,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,kDAAX,EAA+DI,OAA/D,CAAuE,cAAvE,EAAuF,IAAvF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN1C,OAHM,CADM;QAKfoC,MALe;QAMfO,cAAc,EAAE,CAAC,YAAD,CAND;QAOfC,UAAU,EAAE,CAAC,YAAD,CAPG;QAQf1C,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAIiC,QAAJ,EAAc;QACV,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGvC,mBAAmB,CAACiD,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjCsB;;EAmC3B3C,YAAY,CAAC4B,oBAAb,GAAoCA,oBAApC;AACH,CA14CD,EA04CG5B,YAAY,GAAGF,OAAO,CAACE,YAAR,KAAyBF,OAAO,CAACE,YAAR,GAAuB,EAAhD,CA14ClB"},"metadata":{},"sourceType":"script"}