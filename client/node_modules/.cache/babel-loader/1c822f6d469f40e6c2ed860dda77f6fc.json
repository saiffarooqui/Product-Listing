{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frexm\\\\Desktop\\\\ProductListing\\\\client\\\\src\\\\components\\\\body\\\\auth\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isMatch, isPassword } from '../../utils/validation/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction ResetPassword() {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams(); // const navigate = useNavigate()\n\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleResetPass = async () => {\n    if (!isPassword(password)) return setData({ ...data,\n      err: \"Password must be min 8 letter, with at least a symbol, upper and lower case letters and a number\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('/user/reset', {\n        password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      return setData({ ...data,\n        err: \"\",\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fg_pass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cf_password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"cf_password\",\n          id: \"cf_password\",\n          value: cf_password,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPass,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ResetPassword, \"3ScUSeCf1Nn5U7fLvVg9t+th+Eo=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","showErrMsg","showSuccessMsg","isMatch","isPassword","initialState","password","cf_password","err","success","ResetPassword","data","setData","token","handleChangeInput","e","name","value","target","handleResetPass","res","post","headers","Authorization","msg","response"],"sources":["C:/Users/frexm/Desktop/ProductListing/client/src/components/body/auth/ResetPassword.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\r\nimport {isMatch, isPassword} from '../../utils/validation/Validation'\r\n\r\n\r\nconst initialState = {\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction ResetPassword() {\r\n    const [data, setData] = useState(initialState)\r\n    const {token} = useParams()\r\n    // const navigate = useNavigate()\r\n\r\n    const {password, cf_password, err, success} = data\r\n\r\n    const handleChangeInput = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]:value, err: '', success: ''})\r\n    }\r\n\r\n\r\n    const handleResetPass = async () => {\r\n        if (!isPassword(password))\r\n            return setData({ ...data, err: \"Password must be min 8 letter, with at least a symbol, upper and lower case letters and a number\", success: '' })\r\n\r\n        if(!isMatch(password, cf_password))\r\n            return setData({...data, err: \"Password did not match.\", success: ''})\r\n        \r\n        try {\r\n            const res = await axios.post('/user/reset', {password}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n            return setData({...data, err: \"\", success: res.data.msg})\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setData({...data, err: err.response.data.msg, success: ''})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"fg_pass\">\r\n            <h2>Reset Your Password</h2>\r\n\r\n            <div className=\"row\">\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\r\n                onChange={handleChangeInput} />\r\n\r\n                <label htmlFor=\"cf_password\">Confirm Password</label>\r\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\r\n                onChange={handleChangeInput} />         \r\n\r\n                <button onClick={handleResetPass}>Reset Password</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword"],"mappings":"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"},"metadata":{},"sourceType":"module"}