{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.siteVerification_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar siteVerification_v1;\n\n(function (siteVerification_v1) {\n  /**\n   * Google Site Verification API\n   *\n   * Verifies ownership of websites or domains with Google.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const siteVerification = google.siteVerification('v1');\n   * ```\n   */\n  class Siteverification {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.webResource = new Resource$Webresource(this.context);\n    }\n\n  }\n\n  siteVerification_v1.Siteverification = Siteverification;\n\n  class Resource$Webresource {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getToken(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/token').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['verificationMethod'],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  siteVerification_v1.Resource$Webresource = Resource$Webresource;\n})(siteVerification_v1 = exports.siteVerification_v1 || (exports.siteVerification_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","siteVerification_v1","googleapis_common_1","require","Siteverification","constructor","options","google","context","_options","webResource","Resource$Webresource","delete","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","get","getToken","insert","list","patch","update"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/siteVerification/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.siteVerification_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar siteVerification_v1;\n(function (siteVerification_v1) {\n    /**\n     * Google Site Verification API\n     *\n     * Verifies ownership of websites or domains with Google.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const siteVerification = google.siteVerification('v1');\n     * ```\n     */\n    class Siteverification {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.webResource = new Resource$Webresource(this.context);\n        }\n    }\n    siteVerification_v1.Siteverification = Siteverification;\n    class Resource$Webresource {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getToken(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/token').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['verificationMethod'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/siteVerification/v1/webResource/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    siteVerification_v1.Resource$Webresource = Resource$Webresource;\n})(siteVerification_v1 = exports.siteVerification_v1 || (exports.siteVerification_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}