{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frexm\\\\Desktop\\\\Product-Listing\\\\client\\\\src\\\\components\\\\body\\\\home\\\\FaqsCard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FaqsCard = props => {\n  _s();\n\n  const answerElRef = useRef();\n  const [state, setState] = useState(false);\n  const [answerH, setAnswerH] = useState('0px');\n  const {\n    faqsList,\n    idx\n  } = props;\n\n  const handleOpenAnswer = () => {\n    const answerElH = answerElRef.current.childNodes[0].offsetHeight;\n    setState(!state);\n    setAnswerH(`${answerElH + 20}px`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faqs-card\",\n    onClick: handleOpenAnswer,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [faqsList.q, state ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          \"stroke-width\": \"2\",\n          d: \"M20 12H4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M12 4v16m8-8H4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: answerElRef,\n      className: \"answer-container\",\n      style: state ? {\n        height: answerH\n      } : {\n        height: '0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: faqsList.a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FaqsCard, \"S+P6fm5h+cwLKYH3zy87JcX2yIM=\");\n\n_c = FaqsCard;\nexport default (() => {\n  const faqsList = [{\n    q: \"What are some random questions to ask?\",\n    a: \"That's exactly the reason we created this random question generator. There are hundreds of random questions to choose from so you're able to find the perfect random question.\"\n  }, {\n    q: \"Do you include common questions?\",\n    a: \"This generator doesn't include most common questions. The thought is that you can come up with common questions on your own so most of the questions in this generator.\"\n  }, {\n    q: \"Can I use this for 21 questions?\",\n    a: \"Yes! there are two ways that you can use this question generator depending on what you're after. You can indicate that you want 21 questions generated.\"\n  }, {\n    q: \"Are these questions for girls or for boys?\",\n    a: \"The questions in this generator are gender neutral and can be used to ask either male of females (or any other gender the person identifies with).\"\n  }, {\n    q: \"What do you wish you had more talent doing?\",\n    a: \"If you've been searching for a way to get random questions, you've landed on the correct webpage. We created the Random Question Generator to ask you as many random questions as your heart desires.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"faqs-secondary\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faqs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Frequently Asked Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Answered all frequently asked questions, Still confused? feel free to contact us.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faqs-container\",\n      children: faqsList.map((item, idx) => /*#__PURE__*/_jsxDEV(FaqsCard, {\n        idx: idx,\n        faqsList: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"FaqsCard\");","map":{"version":3,"names":["useRef","useState","FaqsCard","props","answerElRef","state","setState","answerH","setAnswerH","faqsList","idx","handleOpenAnswer","answerElH","current","childNodes","offsetHeight","q","height","a","map","item"],"sources":["C:/Users/frexm/Desktop/Product-Listing/client/src/components/body/home/FaqsCard.js"],"sourcesContent":["import { useRef, useState } from \"react\"\r\n\r\nconst FaqsCard = (props) => {\r\n\r\n    const answerElRef = useRef()\r\n    const [state, setState] = useState(false)\r\n    const [answerH, setAnswerH] = useState('0px')\r\n    const { faqsList, idx } = props\r\n\r\n    const handleOpenAnswer = () => {\r\n        const answerElH = answerElRef.current.childNodes[0].offsetHeight\r\n        setState(!state)\r\n        setAnswerH(`${answerElH + 20}px`)\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"faqs-card\"\r\n            key={idx}\r\n            onClick={handleOpenAnswer}\r\n        >\r\n            <h4>\r\n                {faqsList.q}\r\n                {\r\n                    state ? (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 12H4\" />\r\n                        </svg>\r\n                    ) : (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                        </svg>\r\n                    )\r\n                }\r\n            </h4>\r\n            <div\r\n                ref={answerElRef} className=\"answer-container\"\r\n                style={state ? {height: answerH } : {height: '0px'}}\r\n            >\r\n                <div>\r\n                    <p>\r\n                        {faqsList.a}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default () => {\r\n\r\n    const faqsList = [\r\n        {\r\n            q: \"What are some random questions to ask?\",\r\n            a: \"That's exactly the reason we created this random question generator. There are hundreds of random questions to choose from so you're able to find the perfect random question.\"\r\n        },\r\n        {\r\n            q: \"Do you include common questions?\",\r\n            a: \"This generator doesn't include most common questions. The thought is that you can come up with common questions on your own so most of the questions in this generator.\"\r\n        },\r\n        {\r\n            q: \"Can I use this for 21 questions?\",\r\n            a: \"Yes! there are two ways that you can use this question generator depending on what you're after. You can indicate that you want 21 questions generated.\"\r\n        },\r\n        {\r\n            q: \"Are these questions for girls or for boys?\",\r\n            a: \"The questions in this generator are gender neutral and can be used to ask either male of females (or any other gender the person identifies with).\"\r\n        },\r\n        {\r\n            q: \"What do you wish you had more talent doing?\",\r\n            a: \"If you've been searching for a way to get random questions, you've landed on the correct webpage. We created the Random Question Generator to ask you as many random questions as your heart desires.\"\r\n        }\r\n    ]\r\n  \r\n    return (\r\n        <section className=\"faqs-secondary\">\r\n            <div className=\"faqs-header\">\r\n                <h1>\r\n                    Frequently Asked Questions\r\n                </h1>\r\n                <p>\r\n                    Answered all frequently asked questions, Still confused? feel free to contact us.\r\n                </p>\r\n            </div>\r\n            <div className=\"faqs-container\">\r\n                {\r\n                    faqsList.map((item, idx) => (\r\n                        <FaqsCard\r\n                            idx={idx}\r\n                            faqsList={item}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}