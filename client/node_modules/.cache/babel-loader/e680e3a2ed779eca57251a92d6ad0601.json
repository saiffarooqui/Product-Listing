{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthPlus = void 0;\n\nconst google_auth_library_1 = require(\"google-auth-library\");\n\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n  constructor() {\n    super(...arguments);\n    this.JWT = google_auth_library_1.JWT;\n    this.Compute = google_auth_library_1.Compute;\n    this.OAuth2 = google_auth_library_1.OAuth2Client;\n    this.GoogleAuth = google_auth_library_1.GoogleAuth;\n    this.AwsClient = google_auth_library_1.AwsClient;\n    this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n    this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n  }\n  /**\n   * Override getClient(), memoizing an instance of auth for\n   * subsequent calls to getProjectId().\n   */\n\n\n  async getClient(options) {\n    this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n    return this._cachedAuth.getClient();\n  }\n\n  getProjectId(callback) {\n    if (callback) {\n      return this._cachedAuth ? this._cachedAuth.getProjectId(callback) : super.getProjectId(callback);\n    } else {\n      return this._cachedAuth ? this._cachedAuth.getProjectId() : super.getProjectId();\n    }\n  }\n\n}\n\nexports.AuthPlus = AuthPlus;","map":{"version":3,"names":["Object","defineProperty","exports","value","AuthPlus","google_auth_library_1","require","GoogleAuth","constructor","arguments","JWT","Compute","OAuth2","OAuth2Client","AwsClient","IdentityPoolClient","ExternalAccountClient","getClient","options","_cachedAuth","getProjectId","callback"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis-common/build/src/authplus.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthPlus = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n    constructor() {\n        super(...arguments);\n        this.JWT = google_auth_library_1.JWT;\n        this.Compute = google_auth_library_1.Compute;\n        this.OAuth2 = google_auth_library_1.OAuth2Client;\n        this.GoogleAuth = google_auth_library_1.GoogleAuth;\n        this.AwsClient = google_auth_library_1.AwsClient;\n        this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n        this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n    }\n    /**\n     * Override getClient(), memoizing an instance of auth for\n     * subsequent calls to getProjectId().\n     */\n    async getClient(options) {\n        this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n        return this._cachedAuth.getClient();\n    }\n    getProjectId(callback) {\n        if (callback) {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId(callback)\n                : super.getProjectId(callback);\n        }\n        else {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId()\n                : super.getProjectId();\n        }\n    }\n}\nexports.AuthPlus = AuthPlus;\n//# sourceMappingURL=authplus.js.map"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,qBAAD,CAArC;;AACA,MAAMF,QAAN,SAAuBC,qBAAqB,CAACE,UAA7C,CAAwD;EACpDC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,GAAL,GAAWL,qBAAqB,CAACK,GAAjC;IACA,KAAKC,OAAL,GAAeN,qBAAqB,CAACM,OAArC;IACA,KAAKC,MAAL,GAAcP,qBAAqB,CAACQ,YAApC;IACA,KAAKN,UAAL,GAAkBF,qBAAqB,CAACE,UAAxC;IACA,KAAKO,SAAL,GAAiBT,qBAAqB,CAACS,SAAvC;IACA,KAAKC,kBAAL,GAA0BV,qBAAqB,CAACU,kBAAhD;IACA,KAAKC,qBAAL,GAA6BX,qBAAqB,CAACW,qBAAnD;EACH;EACD;AACJ;AACA;AACA;;;EACmB,MAATC,SAAS,CAACC,OAAD,EAAU;IACrB,KAAKC,WAAL,GAAmB,IAAId,qBAAqB,CAACE,UAA1B,CAAqCW,OAArC,CAAnB;IACA,OAAO,KAAKC,WAAL,CAAiBF,SAAjB,EAAP;EACH;;EACDG,YAAY,CAACC,QAAD,EAAW;IACnB,IAAIA,QAAJ,EAAc;MACV,OAAO,KAAKF,WAAL,GACD,KAAKA,WAAL,CAAiBC,YAAjB,CAA8BC,QAA9B,CADC,GAED,MAAMD,YAAN,CAAmBC,QAAnB,CAFN;IAGH,CAJD,MAKK;MACD,OAAO,KAAKF,WAAL,GACD,KAAKA,WAAL,CAAiBC,YAAjB,EADC,GAED,MAAMA,YAAN,EAFN;IAGH;EACJ;;AA9BmD;;AAgCxDlB,OAAO,CAACE,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}