{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frexm\\\\Desktop\\\\ProductListing\\\\client\\\\src\\\\components\\\\body\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport ActivationEmail from './auth/ActivationEmail';\nimport NotFound from '../utils/NotFound/NotFound';\nimport ForgotPass from '../body/auth/ForgotPassword';\nimport ResetPass from '../body/auth/ResetPassword';\nimport Profile from '../body/profile/Profile';\nimport Home from '../body/home/Home';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body() {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const {\n    isLogged\n  } = auth;\n  return (\n    /*#__PURE__*/\n    // <section>\n    //     <Routes>\n    //         <Route path=\"/\" component={Home} exact />\n    //         <Route path=\"/login\" element={isLogged ? <NotFound/> : <Login/>} exact />\n    //         <Route path=\"/register\" element={isLogged ? <NotFound/> : <Register/>} exact />\n    //         <Route path=\"/user/activate/:activation_token\" element={<ActivationEmail/>} exact />\n    //         <Route path=\"/forgot_password\" element={isLogged ? <NotFound/> : <ForgotPass />} exact />\n    //         <Route path=\"/user/reset/:token\" element={isLogged ? <NotFound/> : <ResetPass/>} exact />\n    //         <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\n    //     </Routes>\n    // </section>\n    _jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Home,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: isLogged ? NotFound : Login,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          component: isLogged ? NotFound : Register,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot_password\",\n          component: isLogged ? NotFound : ForgotPass,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/reset/:token\",\n          component: isLogged ? NotFound : ResetPass,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/activate/:activation_token\",\n          component: ActivationEmail,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          component: isLogged ? Profile : NotFound,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Body, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","Switch","Route","Login","Register","ActivationEmail","NotFound","ForgotPass","ResetPass","Profile","Home","useSelector","Body","auth","state","isLogged"],"sources":["C:/Users/frexm/Desktop/ProductListing/client/src/components/body/Body.js"],"sourcesContent":["import React from 'react';\r\nimport { Switch, Route} from 'react-router-dom'\r\nimport Login from './auth/Login'\r\nimport Register from './auth/Register'\r\nimport ActivationEmail from './auth/ActivationEmail'\r\nimport NotFound from '../utils/NotFound/NotFound'\r\n\r\nimport ForgotPass from '../body/auth/ForgotPassword'\r\nimport ResetPass from '../body/auth/ResetPassword'\r\n\r\nimport Profile from '../body/profile/Profile'\r\n\r\nimport Home from '../body/home/Home'\r\n\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\n\r\nfunction Body() {\r\n    const auth = useSelector(state => state.auth)\r\n    const { isLogged } = auth\r\n\r\n    return (\r\n        // <section>\r\n        //     <Routes>\r\n        //         <Route path=\"/\" component={Home} exact />\r\n        //         <Route path=\"/login\" element={isLogged ? <NotFound/> : <Login/>} exact />\r\n        //         <Route path=\"/register\" element={isLogged ? <NotFound/> : <Register/>} exact />\r\n        //         <Route path=\"/user/activate/:activation_token\" element={<ActivationEmail/>} exact />\r\n\r\n        //         <Route path=\"/forgot_password\" element={isLogged ? <NotFound/> : <ForgotPass />} exact />\r\n        //         <Route path=\"/user/reset/:token\" element={isLogged ? <NotFound/> : <ResetPass/>} exact />\r\n            \r\n        //         <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\r\n                \r\n        //     </Routes>\r\n        // </section>\r\n\r\n        <section>\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n\r\n                <Route path=\"/login\" component={isLogged ? NotFound : Login} exact />\r\n                <Route path=\"/register\" component={isLogged ? NotFound : Register} exact />\r\n\r\n                <Route path=\"/forgot_password\" component={isLogged ? NotFound : ForgotPass} exact />\r\n                <Route path=\"/user/reset/:token\" component={isLogged ? NotFound : ResetPass} exact />\r\n\r\n                <Route path=\"/user/activate/:activation_token\" component={ActivationEmail} exact />\r\n\r\n                <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\r\n\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Body"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;;;AAIA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAMC,IAAI,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;EACA,MAAM;IAAEE;EAAF,IAAeF,IAArB;EAEA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IAEA;IACA;IAEA;MAAA,uBACI,QAAC,MAAD;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,SAAS,EAAEH,IAA3B;UAAiC,KAAK;QAAtC;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI,QAAC,KAAD;UAAO,IAAI,EAAC,QAAZ;UAAqB,SAAS,EAAEK,QAAQ,GAAGT,QAAH,GAAcH,KAAtD;UAA6D,KAAK;QAAlE;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII,QAAC,KAAD;UAAO,IAAI,EAAC,WAAZ;UAAwB,SAAS,EAAEY,QAAQ,GAAGT,QAAH,GAAcF,QAAzD;UAAmE,KAAK;QAAxE;UAAA;UAAA;UAAA;QAAA,QAJJ,eAMI,QAAC,KAAD;UAAO,IAAI,EAAC,kBAAZ;UAA+B,SAAS,EAAEW,QAAQ,GAAGT,QAAH,GAAcC,UAAhE;UAA4E,KAAK;QAAjF;UAAA;UAAA;UAAA;QAAA,QANJ,eAOI,QAAC,KAAD;UAAO,IAAI,EAAC,oBAAZ;UAAiC,SAAS,EAAEQ,QAAQ,GAAGT,QAAH,GAAcE,SAAlE;UAA6E,KAAK;QAAlF;UAAA;UAAA;UAAA;QAAA,QAPJ,eASI,QAAC,KAAD;UAAO,IAAI,EAAC,kCAAZ;UAA+C,SAAS,EAAEH,eAA1D;UAA2E,KAAK;QAAhF;UAAA;UAAA;UAAA;QAAA,QATJ,eAWI,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,SAAS,EAAEU,QAAQ,GAAGN,OAAH,GAAaH,QAAvD;UAAiE,KAAK;QAAtE;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAhBJ;AAiCH;;GArCQM,I;UACQD,W;;;KADRC,I;AAuCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}