{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar run_v1;\n\n(function (run_v1) {\n  /**\n   * Cloud Run Admin API\n   *\n   * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const run = google.run('v1');\n   * ```\n   */\n  class Run {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.namespaces = new Resource$Namespaces(this.context);\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  run_v1.Run = Run;\n\n  class Resource$Namespaces {\n    constructor(context) {\n      this.context = context;\n      this.authorizeddomains = new Resource$Namespaces$Authorizeddomains(this.context);\n      this.configurations = new Resource$Namespaces$Configurations(this.context);\n      this.domainmappings = new Resource$Namespaces$Domainmappings(this.context);\n      this.executions = new Resource$Namespaces$Executions(this.context);\n      this.jobs = new Resource$Namespaces$Jobs(this.context);\n      this.revisions = new Resource$Namespaces$Revisions(this.context);\n      this.routes = new Resource$Namespaces$Routes(this.context);\n      this.services = new Resource$Namespaces$Services(this.context);\n      this.tasks = new Resource$Namespaces$Tasks(this.context);\n    }\n\n  }\n\n  run_v1.Resource$Namespaces = Resource$Namespaces;\n\n  class Resource$Namespaces$Authorizeddomains {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Authorizeddomains = Resource$Namespaces$Authorizeddomains;\n\n  class Resource$Namespaces$Configurations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Configurations = Resource$Namespaces$Configurations;\n\n  class Resource$Namespaces$Domainmappings {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Domainmappings = Resource$Namespaces$Domainmappings;\n\n  class Resource$Namespaces$Executions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    cancel(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Executions = Resource$Namespaces$Executions;\n\n  class Resource$Namespaces$Jobs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    replaceJob(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    run(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}:run').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Jobs = Resource$Namespaces$Jobs;\n\n  class Resource$Namespaces$Revisions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Revisions = Resource$Namespaces$Revisions;\n\n  class Resource$Namespaces$Routes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Routes = Resource$Namespaces$Routes;\n\n  class Resource$Namespaces$Services {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    replaceService(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Services = Resource$Namespaces$Services;\n\n  class Resource$Namespaces$Tasks {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/tasks').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Namespaces$Tasks = Resource$Namespaces$Tasks;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.authorizeddomains = new Resource$Projects$Authorizeddomains(this.context);\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n\n  }\n\n  run_v1.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Authorizeddomains {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Authorizeddomains = Resource$Projects$Authorizeddomains;\n\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.authorizeddomains = new Resource$Projects$Locations$Authorizeddomains(this.context);\n      this.configurations = new Resource$Projects$Locations$Configurations(this.context);\n      this.domainmappings = new Resource$Projects$Locations$Domainmappings(this.context);\n      this.jobs = new Resource$Projects$Locations$Jobs(this.context);\n      this.revisions = new Resource$Projects$Locations$Revisions(this.context);\n      this.routes = new Resource$Projects$Locations$Routes(this.context);\n      this.services = new Resource$Projects$Locations$Services(this.context);\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  class Resource$Projects$Locations$Authorizeddomains {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Authorizeddomains = Resource$Projects$Locations$Authorizeddomains;\n\n  class Resource$Projects$Locations$Configurations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Configurations = Resource$Projects$Locations$Configurations;\n\n  class Resource$Projects$Locations$Domainmappings {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Domainmappings = Resource$Projects$Locations$Domainmappings;\n\n  class Resource$Projects$Locations$Jobs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Jobs = Resource$Projects$Locations$Jobs;\n\n  class Resource$Projects$Locations$Revisions {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Revisions = Resource$Projects$Locations$Revisions;\n\n  class Resource$Projects$Locations$Routes {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Routes = Resource$Projects$Locations$Routes;\n\n  class Resource$Projects$Locations$Services {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    replaceService(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  run_v1.Resource$Projects$Locations$Services = Resource$Projects$Locations$Services;\n})(run_v1 = exports.run_v1 || (exports.run_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","run_v1","googleapis_common_1","require","Run","constructor","options","google","context","_options","namespaces","Resource$Namespaces","projects","Resource$Projects","authorizeddomains","Resource$Namespaces$Authorizeddomains","configurations","Resource$Namespaces$Configurations","domainmappings","Resource$Namespaces$Domainmappings","executions","Resource$Namespaces$Executions","jobs","Resource$Namespaces$Jobs","revisions","Resource$Namespaces$Revisions","routes","Resource$Namespaces$Routes","services","Resource$Namespaces$Services","tasks","Resource$Namespaces$Tasks","list","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","get","create","delete","cancel","replaceJob","run","replaceService","Resource$Projects$Authorizeddomains","locations","Resource$Projects$Locations","Resource$Projects$Locations$Authorizeddomains","Resource$Projects$Locations$Configurations","Resource$Projects$Locations$Domainmappings","Resource$Projects$Locations$Jobs","Resource$Projects$Locations$Revisions","Resource$Projects$Locations$Routes","Resource$Projects$Locations$Services","getIamPolicy","setIamPolicy","testIamPermissions"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/run/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar run_v1;\n(function (run_v1) {\n    /**\n     * Cloud Run Admin API\n     *\n     * Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const run = google.run('v1');\n     * ```\n     */\n    class Run {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.namespaces = new Resource$Namespaces(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    run_v1.Run = Run;\n    class Resource$Namespaces {\n        constructor(context) {\n            this.context = context;\n            this.authorizeddomains = new Resource$Namespaces$Authorizeddomains(this.context);\n            this.configurations = new Resource$Namespaces$Configurations(this.context);\n            this.domainmappings = new Resource$Namespaces$Domainmappings(this.context);\n            this.executions = new Resource$Namespaces$Executions(this.context);\n            this.jobs = new Resource$Namespaces$Jobs(this.context);\n            this.revisions = new Resource$Namespaces$Revisions(this.context);\n            this.routes = new Resource$Namespaces$Routes(this.context);\n            this.services = new Resource$Namespaces$Services(this.context);\n            this.tasks = new Resource$Namespaces$Tasks(this.context);\n        }\n    }\n    run_v1.Resource$Namespaces = Resource$Namespaces;\n    class Resource$Namespaces$Authorizeddomains {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/apis/domains.cloudrun.com/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Authorizeddomains = Resource$Namespaces$Authorizeddomains;\n    class Resource$Namespaces$Configurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Configurations = Resource$Namespaces$Configurations;\n    class Resource$Namespaces$Domainmappings {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/domains.cloudrun.com/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Domainmappings = Resource$Namespaces$Domainmappings;\n    class Resource$Namespaces$Executions {\n        constructor(context) {\n            this.context = context;\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Executions = Resource$Namespaces$Executions;\n    class Resource$Namespaces$Jobs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/jobs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        replaceJob(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}:run').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Jobs = Resource$Namespaces$Jobs;\n    class Resource$Namespaces$Revisions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Revisions = Resource$Namespaces$Revisions;\n    class Resource$Namespaces$Routes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Routes = Resource$Namespaces$Routes;\n    class Resource$Namespaces$Services {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        replaceService(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/serving.knative.dev/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Services = Resource$Namespaces$Services;\n    class Resource$Namespaces$Tasks {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/apis/run.googleapis.com/v1/{+parent}/tasks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Namespaces$Tasks = Resource$Namespaces$Tasks;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.authorizeddomains = new Resource$Projects$Authorizeddomains(this.context);\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    run_v1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Authorizeddomains {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Authorizeddomains = Resource$Projects$Authorizeddomains;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.authorizeddomains =\n                new Resource$Projects$Locations$Authorizeddomains(this.context);\n            this.configurations = new Resource$Projects$Locations$Configurations(this.context);\n            this.domainmappings = new Resource$Projects$Locations$Domainmappings(this.context);\n            this.jobs = new Resource$Projects$Locations$Jobs(this.context);\n            this.revisions = new Resource$Projects$Locations$Revisions(this.context);\n            this.routes = new Resource$Projects$Locations$Routes(this.context);\n            this.services = new Resource$Projects$Locations$Services(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Authorizeddomains {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/authorizeddomains').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Authorizeddomains = Resource$Projects$Locations$Authorizeddomains;\n    class Resource$Projects$Locations$Configurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/configurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Configurations = Resource$Projects$Locations$Configurations;\n    class Resource$Projects$Locations$Domainmappings {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/domainmappings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Domainmappings = Resource$Projects$Locations$Domainmappings;\n    class Resource$Projects$Locations$Jobs {\n        constructor(context) {\n            this.context = context;\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Jobs = Resource$Projects$Locations$Jobs;\n    class Resource$Projects$Locations$Revisions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Revisions = Resource$Projects$Locations$Revisions;\n    class Resource$Projects$Locations$Routes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/routes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Routes = Resource$Projects$Locations$Routes;\n    class Resource$Projects$Locations$Services {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/services').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        replaceService(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://run.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    run_v1.Resource$Projects$Locations$Services = Resource$Projects$Locations$Services;\n})(run_v1 = exports.run_v1 || (exports.run_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}