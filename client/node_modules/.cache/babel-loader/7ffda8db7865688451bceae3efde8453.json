{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adexchangebuyer_v1_3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/class-name-casing */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar adexchangebuyer_v1_3;\n\n(function (adexchangebuyer_v1_3) {\n  /**\n   * Ad Exchange Buyer API\n   *\n   * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const adexchangebuyer = google.adexchangebuyer('v1.3');\n   * ```\n   */\n  class Adexchangebuyer {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.billingInfo = new Resource$Billinginfo(this.context);\n      this.budget = new Resource$Budget(this.context);\n      this.creatives = new Resource$Creatives(this.context);\n      this.directDeals = new Resource$Directdeals(this.context);\n      this.performanceReport = new Resource$Performancereport(this.context);\n      this.pretargetingConfig = new Resource$Pretargetingconfig(this.context);\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Adexchangebuyer = Adexchangebuyer;\n\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Accounts = Resource$Accounts;\n\n  class Resource$Billinginfo {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Billinginfo = Resource$Billinginfo;\n\n  class Resource$Budget {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'billingId'],\n        pathParams: ['accountId', 'billingId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'billingId'],\n        pathParams: ['accountId', 'billingId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'billingId'],\n        pathParams: ['accountId', 'billingId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Budget = Resource$Budget;\n\n  class Resource$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/creatives/{accountId}/{buyerCreativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'buyerCreativeId'],\n        pathParams: ['accountId', 'buyerCreativeId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Creatives = Resource$Creatives;\n\n  class Resource$Directdeals {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/directdeals/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['id'],\n        pathParams: ['id'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/directdeals').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Directdeals = Resource$Directdeals;\n\n  class Resource$Performancereport {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/performancereport').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'endDateTime', 'startDateTime'],\n        pathParams: [],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Performancereport = Resource$Performancereport;\n\n  class Resource$Pretargetingconfig {\n    constructor(context) {\n      this.context = context;\n    }\n\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'configId'],\n        pathParams: ['accountId', 'configId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'configId'],\n        pathParams: ['accountId', 'configId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'configId'],\n        pathParams: ['accountId', 'configId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'configId'],\n        pathParams: ['accountId', 'configId'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  adexchangebuyer_v1_3.Resource$Pretargetingconfig = Resource$Pretargetingconfig;\n})(adexchangebuyer_v1_3 = exports.adexchangebuyer_v1_3 || (exports.adexchangebuyer_v1_3 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","adexchangebuyer_v1_3","googleapis_common_1","require","Adexchangebuyer","constructor","options","google","context","_options","accounts","Resource$Accounts","billingInfo","Resource$Billinginfo","budget","Resource$Budget","creatives","Resource$Creatives","directDeals","Resource$Directdeals","performanceReport","Resource$Performancereport","pretargetingConfig","Resource$Pretargetingconfig","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","patch","update","insert","delete"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/adexchangebuyer/v1.3.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adexchangebuyer_v1_3 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/class-name-casing */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adexchangebuyer_v1_3;\n(function (adexchangebuyer_v1_3) {\n    /**\n     * Ad Exchange Buyer API\n     *\n     * Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const adexchangebuyer = google.adexchangebuyer('v1.3');\n     * ```\n     */\n    class Adexchangebuyer {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.billingInfo = new Resource$Billinginfo(this.context);\n            this.budget = new Resource$Budget(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.directDeals = new Resource$Directdeals(this.context);\n            this.performanceReport = new Resource$Performancereport(this.context);\n            this.pretargetingConfig = new Resource$Pretargetingconfig(this.context);\n        }\n    }\n    adexchangebuyer_v1_3.Adexchangebuyer = Adexchangebuyer;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Accounts = Resource$Accounts;\n    class Resource$Billinginfo {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/billinginfo').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Billinginfo = Resource$Billinginfo;\n    class Resource$Budget {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'billingId'],\n                pathParams: ['accountId', 'billingId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'billingId'],\n                pathParams: ['accountId', 'billingId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/billinginfo/{accountId}/{billingId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'billingId'],\n                pathParams: ['accountId', 'billingId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Budget = Resource$Budget;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/creatives/{accountId}/{buyerCreativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'buyerCreativeId'],\n                pathParams: ['accountId', 'buyerCreativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Creatives = Resource$Creatives;\n    class Resource$Directdeals {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/directdeals/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['id'],\n                pathParams: ['id'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/directdeals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Directdeals = Resource$Directdeals;\n    class Resource$Performancereport {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/performancereport').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'endDateTime', 'startDateTime'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Performancereport = Resource$Performancereport;\n    class Resource$Pretargetingconfig {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'configId'],\n                pathParams: ['accountId', 'configId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'configId'],\n                pathParams: ['accountId', 'configId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'configId'],\n                pathParams: ['accountId', 'configId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/adexchangebuyer/v1.3/pretargetingconfigs/{accountId}/{configId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'configId'],\n                pathParams: ['accountId', 'configId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer_v1_3.Resource$Pretargetingconfig = Resource$Pretargetingconfig;\n})(adexchangebuyer_v1_3 = exports.adexchangebuyer_v1_3 || (exports.adexchangebuyer_v1_3 = {}));\n"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,IAAIF,oBAAJ;;AACA,CAAC,UAAUA,oBAAV,EAAgC;EAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,eAAN,CAAsB;IAClBC,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;MACzB,KAAKC,OAAL,GAAe;QACXC,QAAQ,EAAEH,OAAO,IAAI,EADV;QAEXC;MAFW,CAAf;MAIA,KAAKG,QAAL,GAAgB,IAAIC,iBAAJ,CAAsB,KAAKH,OAA3B,CAAhB;MACA,KAAKI,WAAL,GAAmB,IAAIC,oBAAJ,CAAyB,KAAKL,OAA9B,CAAnB;MACA,KAAKM,MAAL,GAAc,IAAIC,eAAJ,CAAoB,KAAKP,OAAzB,CAAd;MACA,KAAKQ,SAAL,GAAiB,IAAIC,kBAAJ,CAAuB,KAAKT,OAA5B,CAAjB;MACA,KAAKU,WAAL,GAAmB,IAAIC,oBAAJ,CAAyB,KAAKX,OAA9B,CAAnB;MACA,KAAKY,iBAAL,GAAyB,IAAIC,0BAAJ,CAA+B,KAAKb,OAApC,CAAzB;MACA,KAAKc,kBAAL,GAA0B,IAAIC,2BAAJ,CAAgC,KAAKf,OAArC,CAA1B;IACH;;EAbiB;;EAetBP,oBAAoB,CAACG,eAArB,GAAuCA,eAAvC;;EACA,MAAMO,iBAAN,CAAwB;IACpBN,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDgB,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,qCAAX,EAAkDI,OAAlD,CAA0D,cAA1D,EAA0E,IAA1E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,IAAD,CAND;QAOfC,UAAU,EAAE,CAAC,IAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,gCAAX,EAA6CI,OAA7C,CAAqD,cAArD,EAAqE,IAArE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDS,KAAK,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACjD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,qCAAX,EAAkDI,OAAlD,CAA0D,cAA1D,EAA0E,IAA1E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,IAAD,CAND;QAOfC,UAAU,EAAE,CAAC,IAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDU,MAAM,CAACf,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,qCAAX,EAAkDI,OAAlD,CAA0D,cAA1D,EAA0E,IAA1E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,IAAD,CAND;QAOfC,UAAU,EAAE,CAAC,IAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EA3HmB;;EA6HxB7B,oBAAoB,CAACU,iBAArB,GAAyCA,iBAAzC;;EACA,MAAME,oBAAN,CAA2B;IACvBR,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDgB,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,+CAAX,EAA4DI,OAA5D,CAAoE,cAApE,EAAoF,IAApF,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,mCAAX,EAAgDI,OAAhD,CAAwD,cAAxD,EAAwE,IAAxE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EA/DsB;;EAiE3B7B,oBAAoB,CAACY,oBAArB,GAA4CA,oBAA5C;;EACA,MAAME,eAAN,CAAsB;IAClBV,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDgB,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,2DADC,EAC4DI,OAD5D,CACoE,cADpE,EACoF,IADpF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDS,KAAK,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACjD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,2DADC,EAC4DI,OAD5D,CACoE,cADpE,EACoF,IADpF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDU,MAAM,CAACf,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,2DADC,EAC4DI,OAD5D,CACoE,cADpE,EACoF,IADpF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,WAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,WAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAhGiB;;EAkGtB7B,oBAAoB,CAACc,eAArB,GAAuCA,eAAvC;;EACA,MAAME,kBAAN,CAAyB;IACrBZ,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDgB,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,+DADC,EACgEI,OADhE,CACwE,cADxE,EACwF,IADxF,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,iBAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,iBAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDW,MAAM,CAAChB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,iCAAX,EAA8CI,OAA9C,CAAsD,cAAtD,EAAsE,IAAtE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EA9FoB;;EAgGzB7B,oBAAoB,CAACgB,kBAArB,GAA0CA,kBAA1C;;EACA,MAAME,oBAAN,CAA2B;IACvBd,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDgB,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,wCAAX,EAAqDI,OAArD,CAA6D,cAA7D,EAA6E,IAA7E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,IAAD,CAND;QAOfC,UAAU,EAAE,CAAC,IAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAAI,EAAlC;MACA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,mCAAX,EAAgDI,OAAhD,CAAwD,cAAxD,EAAwE,IAAxE,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,EAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EA/DsB;;EAiE3B7B,oBAAoB,CAACkB,oBAArB,GAA4CA,oBAA5C;;EACA,MAAME,0BAAN,CAAiC;IAC7BhB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACD8B,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,yCAAX,EAAsDI,OAAtD,CAA8D,cAA9D,EAA8E,IAA9E,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,EAAc,aAAd,EAA6B,eAA7B,CAND;QAOfC,UAAU,EAAE,EAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAlC4B;;EAoCjC7B,oBAAoB,CAACoB,0BAArB,GAAkDA,0BAAlD;;EACA,MAAME,2BAAN,CAAkC;IAC9BlB,WAAW,CAACG,OAAD,EAAU;MACjB,KAAKA,OAAL,GAAeA,OAAf;IACH;;IACDkC,MAAM,CAACjB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EACmEI,OADnE,CAC2E,cAD3E,EAC2F,IAD3F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDN,GAAG,CAACC,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAC/C,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EACmEI,OADnE,CAC2E,cAD3E,EAC2F,IAD3F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDW,MAAM,CAAChB,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,uDAAX,EAAoEI,OAApE,CAA4E,cAA5E,EAA4F,IAA5F,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDQ,IAAI,CAACb,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAChD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GAAG,uDAAX,EAAoEI,OAApE,CAA4E,cAA5E,EAA4F,IAA5F,CADc;UAEnBC,MAAM,EAAE;QAFW,CAAd,EAGN5B,OAHM,CADM;QAKfsB,MALe;QAMfO,cAAc,EAAE,CAAC,WAAD,CAND;QAOfC,UAAU,EAAE,CAAC,WAAD,CAPG;QAQf5B,OAAO,EAAE,KAAKA;MARC,CAAnB;;MAUA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDS,KAAK,CAACd,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MACjD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EACmEI,OADnE,CAC2E,cAD3E,EAC2F,IAD3F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;IACDU,MAAM,CAACf,gBAAD,EAAmBC,iBAAnB,EAAsCC,QAAtC,EAAgD;MAClD,IAAIC,MAAM,GAAIH,gBAAgB,IAC1B,EADJ;MAEA,IAAInB,OAAO,GAAIoB,iBAAiB,IAAI,EAApC;;MACA,IAAI,OAAOD,gBAAP,KAA4B,UAAhC,EAA4C;QACxCE,QAAQ,GAAGF,gBAAX;QACAG,MAAM,GAAG,EAAT;QACAtB,OAAO,GAAG,EAAV;MACH;;MACD,IAAI,OAAOoB,iBAAP,KAA6B,UAAjC,EAA6C;QACzCC,QAAQ,GAAGD,iBAAX;QACApB,OAAO,GAAG,EAAV;MACH;;MACD,MAAMuB,OAAO,GAAGvB,OAAO,CAACuB,OAAR,IAAmB,6BAAnC;MACA,MAAMC,UAAU,GAAG;QACfxB,OAAO,EAAET,MAAM,CAACkC,MAAP,CAAc;UACnBC,GAAG,EAAE,CAACH,OAAO,GACT,kEADC,EACmEI,OADnE,CAC2E,cAD3E,EAC2F,IAD3F,CADc;UAGnBC,MAAM,EAAE;QAHW,CAAd,EAIN5B,OAJM,CADM;QAMfsB,MANe;QAOfO,cAAc,EAAE,CAAC,WAAD,EAAc,UAAd,CAPD;QAQfC,UAAU,EAAE,CAAC,WAAD,EAAc,UAAd,CARG;QASf5B,OAAO,EAAE,KAAKA;MATC,CAAnB;;MAWA,IAAImB,QAAJ,EAAc;QACV,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,EAAsDH,QAAtD;MACH,CAFD,MAGK;QACD,OAAO,CAAC,GAAGzB,mBAAmB,CAACmC,gBAAxB,EAA0CP,UAA1C,CAAP;MACH;IACJ;;EAjM6B;;EAmMlC7B,oBAAoB,CAACsB,2BAArB,GAAmDA,2BAAnD;AACH,CA3sBD,EA2sBGtB,oBAAoB,GAAGF,OAAO,CAACE,oBAAR,KAAiCF,OAAO,CAACE,oBAAR,GAA+B,EAAhE,CA3sB1B"},"metadata":{},"sourceType":"script"}