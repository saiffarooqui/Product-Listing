{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.businessprofileperformance_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar businessprofileperformance_v1;\n\n(function (businessprofileperformance_v1) {\n  /**\n   * Business Profile Performance API\n   *\n   * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const businessprofileperformance = google.businessprofileperformance('v1');\n   * ```\n   */\n  class Businessprofileperformance {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.locations = new Resource$Locations(this.context);\n    }\n\n  }\n\n  businessprofileperformance_v1.Businessprofileperformance = Businessprofileperformance;\n\n  class Resource$Locations {\n    constructor(context) {\n      this.context = context;\n      this.searchkeywords = new Resource$Locations$Searchkeywords(this.context);\n    }\n\n    getDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:getDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  businessprofileperformance_v1.Resource$Locations = Resource$Locations;\n\n  class Resource$Locations$Searchkeywords {\n    constructor(context) {\n      this.context = context;\n      this.impressions = new Resource$Locations$Searchkeywords$Impressions(this.context);\n    }\n\n  }\n\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords = Resource$Locations$Searchkeywords;\n\n  class Resource$Locations$Searchkeywords$Impressions {\n    constructor(context) {\n      this.context = context;\n      this.monthly = new Resource$Locations$Searchkeywords$Impressions$Monthly(this.context);\n    }\n\n  }\n\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions = Resource$Locations$Searchkeywords$Impressions;\n\n  class Resource$Locations$Searchkeywords$Impressions$Monthly {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/searchkeywords/impressions/monthly').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions$Monthly = Resource$Locations$Searchkeywords$Impressions$Monthly;\n})(businessprofileperformance_v1 = exports.businessprofileperformance_v1 || (exports.businessprofileperformance_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","businessprofileperformance_v1","googleapis_common_1","require","Businessprofileperformance","constructor","options","google","context","_options","locations","Resource$Locations","searchkeywords","Resource$Locations$Searchkeywords","getDailyMetricsTimeSeries","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","impressions","Resource$Locations$Searchkeywords$Impressions","monthly","Resource$Locations$Searchkeywords$Impressions$Monthly","list"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/businessprofileperformance/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.businessprofileperformance_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar businessprofileperformance_v1;\n(function (businessprofileperformance_v1) {\n    /**\n     * Business Profile Performance API\n     *\n     * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const businessprofileperformance = google.businessprofileperformance('v1');\n     * ```\n     */\n    class Businessprofileperformance {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.locations = new Resource$Locations(this.context);\n        }\n    }\n    businessprofileperformance_v1.Businessprofileperformance = Businessprofileperformance;\n    class Resource$Locations {\n        constructor(context) {\n            this.context = context;\n            this.searchkeywords = new Resource$Locations$Searchkeywords(this.context);\n        }\n        getDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:getDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations = Resource$Locations;\n    class Resource$Locations$Searchkeywords {\n        constructor(context) {\n            this.context = context;\n            this.impressions = new Resource$Locations$Searchkeywords$Impressions(this.context);\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords = Resource$Locations$Searchkeywords;\n    class Resource$Locations$Searchkeywords$Impressions {\n        constructor(context) {\n            this.context = context;\n            this.monthly = new Resource$Locations$Searchkeywords$Impressions$Monthly(this.context);\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions = Resource$Locations$Searchkeywords$Impressions;\n    class Resource$Locations$Searchkeywords$Impressions$Monthly {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/searchkeywords/impressions/monthly').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions$Monthly = Resource$Locations$Searchkeywords$Impressions$Monthly;\n})(businessprofileperformance_v1 = exports.businessprofileperformance_v1 || (exports.businessprofileperformance_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}