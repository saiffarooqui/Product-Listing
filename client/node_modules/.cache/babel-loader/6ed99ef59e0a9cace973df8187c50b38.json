{"ast":null,"code":"\"use strict\"; // Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidSubjectTokenError = exports.InvalidMessageFieldError = exports.InvalidCodeFieldError = exports.InvalidTokenTypeFieldError = exports.InvalidExpirationTimeFieldError = exports.InvalidSuccessFieldError = exports.InvalidVersionFieldError = exports.ExecutableResponseError = exports.ExecutableResponse = void 0;\nconst SAML_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:saml2';\nconst OIDC_SUBJECT_TOKEN_TYPE1 = 'urn:ietf:params:oauth:token-type:id_token';\nconst OIDC_SUBJECT_TOKEN_TYPE2 = 'urn:ietf:params:oauth:token-type:jwt';\n/**\n * Defines the response of a 3rd party executable run by the pluggable auth client.\n */\n\nclass ExecutableResponse {\n  /**\n   * Instantiates an ExecutableResponse instance using the provided JSON object\n   * from the output of the executable.\n   * @param responseJson Response from a 3rd party executable, loaded from a\n   * run of the executable or a cached output file.\n   */\n  constructor(responseJson) {\n    // Check that the required fields exist in the json response.\n    if (!responseJson.version) {\n      throw new InvalidVersionFieldError(\"Executable response must contain a 'version' field.\");\n    }\n\n    if (responseJson.success === undefined) {\n      throw new InvalidSuccessFieldError(\"Executable response must contain a 'success' field.\");\n    }\n\n    this.version = responseJson.version;\n    this.success = responseJson.success; // Validate required fields for a successful response.\n\n    if (this.success) {\n      this.expirationTime = responseJson.expiration_time;\n      this.tokenType = responseJson.token_type; // Validate token type field.\n\n      if (this.tokenType !== SAML_SUBJECT_TOKEN_TYPE && this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE1 && this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE2) {\n        throw new InvalidTokenTypeFieldError(\"Executable response must contain a 'token_type' field when successful \" + `and it must be one of ${OIDC_SUBJECT_TOKEN_TYPE1}, ${OIDC_SUBJECT_TOKEN_TYPE2}, or ${SAML_SUBJECT_TOKEN_TYPE}.`);\n      } // Validate subject token.\n\n\n      if (this.tokenType === SAML_SUBJECT_TOKEN_TYPE) {\n        if (!responseJson.saml_response) {\n          throw new InvalidSubjectTokenError(`Executable response must contain a 'saml_response' field when token_type=${SAML_SUBJECT_TOKEN_TYPE}.`);\n        }\n\n        this.subjectToken = responseJson.saml_response;\n      } else {\n        if (!responseJson.id_token) {\n          throw new InvalidSubjectTokenError(\"Executable response must contain a 'id_token' field when \" + `token_type=${OIDC_SUBJECT_TOKEN_TYPE1} or ${OIDC_SUBJECT_TOKEN_TYPE2}.`);\n        }\n\n        this.subjectToken = responseJson.id_token;\n      }\n    } else {\n      // Both code and message must be provided for unsuccessful responses.\n      if (!responseJson.code) {\n        throw new InvalidCodeFieldError(\"Executable response must contain a 'code' field when unsuccessful.\");\n      }\n\n      if (!responseJson.message) {\n        throw new InvalidMessageFieldError(\"Executable response must contain a 'message' field when unsuccessful.\");\n      }\n\n      this.errorCode = responseJson.code;\n      this.errorMessage = responseJson.message;\n    }\n  }\n  /**\n   * @return A boolean representing if the response has a valid token. Returns\n   * true when the response was successful and the token is not expired.\n   */\n\n\n  isValid() {\n    return !this.isExpired() && this.success;\n  }\n  /**\n   * @return A boolean representing if the response is expired. Returns true if the\n   * provided timeout has passed.\n   */\n\n\n  isExpired() {\n    return this.expirationTime !== undefined && this.expirationTime < Math.round(Date.now() / 1000);\n  }\n\n}\n\nexports.ExecutableResponse = ExecutableResponse;\n/**\n * An error thrown by the ExecutableResponse class.\n */\n\nclass ExecutableResponseError extends Error {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nexports.ExecutableResponseError = ExecutableResponseError;\n/**\n * An error thrown when the 'version' field in an executable response is missing or invalid.\n */\n\nclass InvalidVersionFieldError extends ExecutableResponseError {}\n\nexports.InvalidVersionFieldError = InvalidVersionFieldError;\n/**\n * An error thrown when the 'success' field in an executable response is missing or invalid.\n */\n\nclass InvalidSuccessFieldError extends ExecutableResponseError {}\n\nexports.InvalidSuccessFieldError = InvalidSuccessFieldError;\n/**\n * An error thrown when the 'expiration_time' field in an executable response is missing or invalid.\n */\n\nclass InvalidExpirationTimeFieldError extends ExecutableResponseError {}\n\nexports.InvalidExpirationTimeFieldError = InvalidExpirationTimeFieldError;\n/**\n * An error thrown when the 'token_type' field in an executable response is missing or invalid.\n */\n\nclass InvalidTokenTypeFieldError extends ExecutableResponseError {}\n\nexports.InvalidTokenTypeFieldError = InvalidTokenTypeFieldError;\n/**\n * An error thrown when the 'code' field in an executable response is missing or invalid.\n */\n\nclass InvalidCodeFieldError extends ExecutableResponseError {}\n\nexports.InvalidCodeFieldError = InvalidCodeFieldError;\n/**\n * An error thrown when the 'message' field in an executable response is missing or invalid.\n */\n\nclass InvalidMessageFieldError extends ExecutableResponseError {}\n\nexports.InvalidMessageFieldError = InvalidMessageFieldError;\n/**\n * An error thrown when the subject token in an executable response is missing or invalid.\n */\n\nclass InvalidSubjectTokenError extends ExecutableResponseError {}\n\nexports.InvalidSubjectTokenError = InvalidSubjectTokenError;","map":{"version":3,"names":["Object","defineProperty","exports","value","InvalidSubjectTokenError","InvalidMessageFieldError","InvalidCodeFieldError","InvalidTokenTypeFieldError","InvalidExpirationTimeFieldError","InvalidSuccessFieldError","InvalidVersionFieldError","ExecutableResponseError","ExecutableResponse","SAML_SUBJECT_TOKEN_TYPE","OIDC_SUBJECT_TOKEN_TYPE1","OIDC_SUBJECT_TOKEN_TYPE2","constructor","responseJson","version","success","undefined","expirationTime","expiration_time","tokenType","token_type","saml_response","subjectToken","id_token","code","message","errorCode","errorMessage","isValid","isExpired","Math","round","Date","now","Error","setPrototypeOf","new","target","prototype"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/google-auth-library/build/src/auth/executable-response.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidSubjectTokenError = exports.InvalidMessageFieldError = exports.InvalidCodeFieldError = exports.InvalidTokenTypeFieldError = exports.InvalidExpirationTimeFieldError = exports.InvalidSuccessFieldError = exports.InvalidVersionFieldError = exports.ExecutableResponseError = exports.ExecutableResponse = void 0;\nconst SAML_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:saml2';\nconst OIDC_SUBJECT_TOKEN_TYPE1 = 'urn:ietf:params:oauth:token-type:id_token';\nconst OIDC_SUBJECT_TOKEN_TYPE2 = 'urn:ietf:params:oauth:token-type:jwt';\n/**\n * Defines the response of a 3rd party executable run by the pluggable auth client.\n */\nclass ExecutableResponse {\n    /**\n     * Instantiates an ExecutableResponse instance using the provided JSON object\n     * from the output of the executable.\n     * @param responseJson Response from a 3rd party executable, loaded from a\n     * run of the executable or a cached output file.\n     */\n    constructor(responseJson) {\n        // Check that the required fields exist in the json response.\n        if (!responseJson.version) {\n            throw new InvalidVersionFieldError(\"Executable response must contain a 'version' field.\");\n        }\n        if (responseJson.success === undefined) {\n            throw new InvalidSuccessFieldError(\"Executable response must contain a 'success' field.\");\n        }\n        this.version = responseJson.version;\n        this.success = responseJson.success;\n        // Validate required fields for a successful response.\n        if (this.success) {\n            this.expirationTime = responseJson.expiration_time;\n            this.tokenType = responseJson.token_type;\n            // Validate token type field.\n            if (this.tokenType !== SAML_SUBJECT_TOKEN_TYPE &&\n                this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE1 &&\n                this.tokenType !== OIDC_SUBJECT_TOKEN_TYPE2) {\n                throw new InvalidTokenTypeFieldError(\"Executable response must contain a 'token_type' field when successful \" +\n                    `and it must be one of ${OIDC_SUBJECT_TOKEN_TYPE1}, ${OIDC_SUBJECT_TOKEN_TYPE2}, or ${SAML_SUBJECT_TOKEN_TYPE}.`);\n            }\n            // Validate subject token.\n            if (this.tokenType === SAML_SUBJECT_TOKEN_TYPE) {\n                if (!responseJson.saml_response) {\n                    throw new InvalidSubjectTokenError(`Executable response must contain a 'saml_response' field when token_type=${SAML_SUBJECT_TOKEN_TYPE}.`);\n                }\n                this.subjectToken = responseJson.saml_response;\n            }\n            else {\n                if (!responseJson.id_token) {\n                    throw new InvalidSubjectTokenError(\"Executable response must contain a 'id_token' field when \" +\n                        `token_type=${OIDC_SUBJECT_TOKEN_TYPE1} or ${OIDC_SUBJECT_TOKEN_TYPE2}.`);\n                }\n                this.subjectToken = responseJson.id_token;\n            }\n        }\n        else {\n            // Both code and message must be provided for unsuccessful responses.\n            if (!responseJson.code) {\n                throw new InvalidCodeFieldError(\"Executable response must contain a 'code' field when unsuccessful.\");\n            }\n            if (!responseJson.message) {\n                throw new InvalidMessageFieldError(\"Executable response must contain a 'message' field when unsuccessful.\");\n            }\n            this.errorCode = responseJson.code;\n            this.errorMessage = responseJson.message;\n        }\n    }\n    /**\n     * @return A boolean representing if the response has a valid token. Returns\n     * true when the response was successful and the token is not expired.\n     */\n    isValid() {\n        return !this.isExpired() && this.success;\n    }\n    /**\n     * @return A boolean representing if the response is expired. Returns true if the\n     * provided timeout has passed.\n     */\n    isExpired() {\n        return (this.expirationTime !== undefined &&\n            this.expirationTime < Math.round(Date.now() / 1000));\n    }\n}\nexports.ExecutableResponse = ExecutableResponse;\n/**\n * An error thrown by the ExecutableResponse class.\n */\nclass ExecutableResponseError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.ExecutableResponseError = ExecutableResponseError;\n/**\n * An error thrown when the 'version' field in an executable response is missing or invalid.\n */\nclass InvalidVersionFieldError extends ExecutableResponseError {\n}\nexports.InvalidVersionFieldError = InvalidVersionFieldError;\n/**\n * An error thrown when the 'success' field in an executable response is missing or invalid.\n */\nclass InvalidSuccessFieldError extends ExecutableResponseError {\n}\nexports.InvalidSuccessFieldError = InvalidSuccessFieldError;\n/**\n * An error thrown when the 'expiration_time' field in an executable response is missing or invalid.\n */\nclass InvalidExpirationTimeFieldError extends ExecutableResponseError {\n}\nexports.InvalidExpirationTimeFieldError = InvalidExpirationTimeFieldError;\n/**\n * An error thrown when the 'token_type' field in an executable response is missing or invalid.\n */\nclass InvalidTokenTypeFieldError extends ExecutableResponseError {\n}\nexports.InvalidTokenTypeFieldError = InvalidTokenTypeFieldError;\n/**\n * An error thrown when the 'code' field in an executable response is missing or invalid.\n */\nclass InvalidCodeFieldError extends ExecutableResponseError {\n}\nexports.InvalidCodeFieldError = InvalidCodeFieldError;\n/**\n * An error thrown when the 'message' field in an executable response is missing or invalid.\n */\nclass InvalidMessageFieldError extends ExecutableResponseError {\n}\nexports.InvalidMessageFieldError = InvalidMessageFieldError;\n/**\n * An error thrown when the subject token in an executable response is missing or invalid.\n */\nclass InvalidSubjectTokenError extends ExecutableResponseError {\n}\nexports.InvalidSubjectTokenError = InvalidSubjectTokenError;\n//# sourceMappingURL=executable-response.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}