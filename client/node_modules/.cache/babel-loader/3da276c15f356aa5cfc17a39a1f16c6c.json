{"ast":null,"code":"// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {}; // Bits per digit\n\nvar dbits; // JavaScript engine analysis\n\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe; // (public) Constructor\n\nfunction BigInteger(a, b, c) {\n  this.data = [];\n  if (a != null) if (\"number\" == typeof a) this.fromNumber(a, b, c);else if (b == null && \"string\" != typeof a) this.fromString(a, 256);else this.fromString(a, b);\n}\n\nforge.jsbn.BigInteger = BigInteger; // return new, unset BigInteger\n\nfunction nbi() {\n  return new BigInteger(null);\n} // am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\n\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this.data[i++] + w.data[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w.data[j++] = v & 0x3ffffff;\n  }\n\n  return c;\n} // am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\n\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n\n  while (--n >= 0) {\n    var l = this.data[i] & 0x7fff;\n    var h = this.data[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w.data[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w.data[j++] = l & 0x3fffffff;\n  }\n\n  return c;\n} // Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\n\n\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n\n  while (--n >= 0) {\n    var l = this.data[i] & 0x3fff;\n    var h = this.data[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w.data[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w.data[j++] = l & 0xfffffff;\n  }\n\n  return c;\n} // node.js (no browser)\n\n\nif (typeof navigator === 'undefined') {\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n} else if (j_lm && navigator.appName == \"Microsoft Internet Explorer\") {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (j_lm && navigator.appName != \"Netscape\") {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\n\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\n\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n\nrr = \"a\".charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nrr = \"A\".charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n} // (protected) copy this to r\n\n\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r.data[i] = this.data[i];\n\n  r.t = this.t;\n  r.s = this.s;\n} // (protected) set from integer value x, -DV <= x < DV\n\n\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this.data[0] = x;else if (x < -1) this.data[0] = x + this.DV;else this.t = 0;\n} // return bigint initialized to value\n\n\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n} // (protected) set from string and radix\n\n\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {\n    this.fromRadix(s, b);\n    return;\n  }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n\n  while (--i >= 0) {\n    var x = k == 8 ? s[i] & 0xff : intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n\n    mi = false;\n    if (sh == 0) this.data[this.t++] = x;else if (sh + k > this.DB) {\n      this.data[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this.data[this.t++] = x >> this.DB - sh;\n    } else this.data[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    this.s = -1;\n    if (sh > 0) this.data[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;\n  }\n\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) clamp off excess high words\n\n\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n\n  while (this.t > 0 && this.data[this.t - 1] == c) --this.t;\n} // (public) return string representation in given radix\n\n\nfunction bnToString(b) {\n  if (this.s < 0) return \"-\" + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else return this.toRadix(b);\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = \"\",\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this.data[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n\n    while (i >= 0) {\n      if (p < k) {\n        d = (this.data[i] & (1 << p) - 1) << k - p;\n        d |= this.data[--i] >> (p += this.DB - k);\n      } else {\n        d = this.data[i] >> (p -= k) & km;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n\n  return m ? r : \"0\";\n} // (public) -this\n\n\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n} // (public) |this|\n\n\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n} // (public) return + if this > a, - if this < a, 0 if equal\n\n\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n\n  while (--i >= 0) if ((r = this.data[i] - a.data[i]) != 0) return r;\n\n  return 0;\n} // returns bit length of the integer x\n\n\nfunction nbits(x) {\n  var r = 1,\n      t;\n\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n\n  return r;\n} // (public) return the number of bits in \"this\"\n\n\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this.data[this.t - 1] ^ this.s & this.DM);\n} // (protected) r = this << n*DB\n\n\nfunction bnpDLShiftTo(n, r) {\n  var i;\n\n  for (i = this.t - 1; i >= 0; --i) r.data[i + n] = this.data[i];\n\n  for (i = n - 1; i >= 0; --i) r.data[i] = 0;\n\n  r.t = this.t + n;\n  r.s = this.s;\n} // (protected) r = this >> n*DB\n\n\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r.data[i - n] = this.data[i];\n\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n} // (protected) r = this << n\n\n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r.data[i + ds + 1] = this.data[i] >> cbs | c;\n    c = (this.data[i] & bm) << bs;\n  }\n\n  for (i = ds - 1; i >= 0; --i) r.data[i] = 0;\n\n  r.data[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n} // (protected) r = this >> n\n\n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r.data[0] = this.data[ds] >> bs;\n\n  for (var i = ds + 1; i < this.t; ++i) {\n    r.data[i - ds - 1] |= (this.data[i] & bm) << cbs;\n    r.data[i - ds] = this.data[i] >> bs;\n  }\n\n  if (bs > 0) r.data[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n} // (protected) r = this - a\n\n\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this.data[i] - a.data[i];\n    r.data[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c -= a.s;\n\n    while (i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c -= a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r.data[i++] = this.DV + c;else if (c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n} // (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n\n  while (--i >= 0) r.data[i] = 0;\n\n  for (i = 0; i < y.t; ++i) r.data[i + x.t] = x.am(0, y.data[i], r, i, 0, x.t);\n\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n} // (protected) r = this^2, r != this (HAC 14.16)\n\n\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n\n  while (--i >= 0) r.data[i] = 0;\n\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x.data[i], r, 2 * i, 0, 1);\n\n    if ((r.data[i + x.t] += x.am(i + 1, 2 * x.data[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r.data[i + x.t] -= x.DV;\n      r.data[i + x.t + 1] = 1;\n    }\n  }\n\n  if (r.t > 0) r.data[r.t - 1] += x.am(i, x.data[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\n\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm.data[pm.t - 1]); // normalize modulus\n\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n\n  var ys = y.t;\n  var y0 = y.data[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y.data[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n\n  if (r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t, r);\n  }\n\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\n  while (y.t < ys) y.data[y.t++] = 0;\n\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r.data[--i] == y0 ? this.DM : Math.floor(r.data[i] * d1 + (r.data[i - 1] + e) * d2);\n\n    if ((r.data[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n\n      while (r.data[i] < --qd) r.subTo(t, r);\n    }\n  }\n\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n} // (public) this mod a\n\n\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n} // Modular reduction using \"classic\" algorithm\n\n\nfunction Classic(m) {\n  this.m = m;\n}\n\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;\n}\n\nfunction cRevert(x) {\n  return x;\n}\n\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x);\n}\n\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nfunction cSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo; // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this.data[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n\n  return y > 0 ? this.DV - y : -y;\n} // Montgomery reduction\n\n\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n} // xR mod m\n\n\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n} // x/R mod m\n\n\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n} // x = x/R mod m (HAC 14.32)\n\n\nfunction montReduce(x) {\n  while (x.t <= this.mt2) // pad x so am has enough room later\n  x.data[x.t++] = 0;\n\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x.data[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\n\n    j = i + this.m.t;\n    x.data[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\n\n    while (x.data[j] >= x.DV) {\n      x.data[j] -= x.DV;\n      x.data[++j]++;\n    }\n  }\n\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = \"x^2/R mod m\"; x != r\n\n\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = \"xy/R mod m\"; x,y != r\n\n\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo; // (protected) true iff this is even\n\nfunction bnpIsEven() {\n  return (this.t > 0 ? this.data[0] & 1 : this.s) == 0;\n} // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n\n\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(),\n      r2 = nbi(),\n      g = z.convert(this),\n      i = nbits(e) - 1;\n  g.copyTo(r);\n\n  while (--i >= 0) {\n    z.sqrTo(r, r2);\n    if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {\n      var t = r;\n      r = r2;\n      r2 = t;\n    }\n  }\n\n  return z.revert(r);\n} // (public) this^e % m, 0 <= e < 2^32\n\n\nfunction bnModPowInt(e, m) {\n  var z;\n  if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);\n  return this.exp(e, z);\n} // protected\n\n\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp; // public\n\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt; // \"constants\"\n\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1); // jsbn2 lib\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n//Extended JavaScript BN functions, required for RSA private ops.\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n//(public)\n\nfunction bnClone() {\n  var r = nbi();\n  this.copyTo(r);\n  return r;\n} //(public) return value as integer\n\n\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this.data[0] - this.DV;else if (this.t == 0) return -1;\n  } else if (this.t == 1) return this.data[0];else if (this.t == 0) return 0; // assumes 16 < DB < 32\n\n\n  return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0];\n} //(public) return value as byte\n\n\nfunction bnByteValue() {\n  return this.t == 0 ? this.s : this.data[0] << 24 >> 24;\n} //(public) return value as short (assumes DB>=16)\n\n\nfunction bnShortValue() {\n  return this.t == 0 ? this.s : this.data[0] << 16 >> 16;\n} //(protected) return x s.t. r^x < DV\n\n\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r));\n} //(public) 0 if this == 0, 1 if this > 0\n\n\nfunction bnSigNum() {\n  if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this.data[0] <= 0) return 0;else return 1;\n} //(protected) convert to radix string\n\n\nfunction bnpToRadix(b) {\n  if (b == null) b = 10;\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b, cs);\n  var d = nbv(a),\n      y = nbi(),\n      z = nbi(),\n      r = \"\";\n  this.divRemTo(d, y, z);\n\n  while (y.signum() > 0) {\n    r = (a + z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d, y, z);\n  }\n\n  return z.intValue().toString(b) + r;\n} //(protected) convert from radix string\n\n\nfunction bnpFromRadix(s, b) {\n  this.fromInt(0);\n  if (b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b, cs),\n      mi = false,\n      j = 0,\n      w = 0;\n\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n\n    w = b * w + x;\n\n    if (++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w, 0);\n      j = 0;\n      w = 0;\n    }\n  }\n\n  if (j > 0) {\n    this.dMultiply(Math.pow(b, j));\n    this.dAddOffset(w, 0);\n  }\n\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} //(protected) alternate constructor\n\n\nfunction bnpFromNumber(a, b, c) {\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) this.fromInt(1);else {\n      this.fromNumber(a, c);\n      if (!this.testBit(a - 1)) // force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n      if (this.isEven()) this.dAddOffset(1, 0); // force odd\n\n      while (!this.isProbablePrime(b)) {\n        this.dAddOffset(2, 0);\n        if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n        t = a & 7;\n    x.length = (a >> 3) + 1;\n    b.nextBytes(x);\n    if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;\n    this.fromString(x, 256);\n  }\n} //(public) convert to bigendian byte array\n\n\nfunction bnToByteArray() {\n  var i = this.t,\n      r = new Array();\n  r[0] = this.s;\n  var p = this.DB - i * this.DB % 8,\n      d,\n      k = 0;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this.data[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | this.s << this.DB - p;\n\n    while (i >= 0) {\n      if (p < 8) {\n        d = (this.data[i] & (1 << p) - 1) << 8 - p;\n        d |= this.data[--i] >> (p += this.DB - 8);\n      } else {\n        d = this.data[i] >> (p -= 8) & 0xff;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if ((d & 0x80) != 0) d |= -256;\n      if (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;\n      if (k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n\n  return r;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\nfunction bnMin(a) {\n  return this.compareTo(a) < 0 ? this : a;\n}\n\nfunction bnMax(a) {\n  return this.compareTo(a) > 0 ? this : a;\n} //(protected) r = this op a (bitwise)\n\n\nfunction bnpBitwiseTo(a, op, r) {\n  var i,\n      f,\n      m = Math.min(a.t, this.t);\n\n  for (i = 0; i < m; ++i) r.data[i] = op(this.data[i], a.data[i]);\n\n  if (a.t < this.t) {\n    f = a.s & this.DM;\n\n    for (i = m; i < this.t; ++i) r.data[i] = op(this.data[i], f);\n\n    r.t = this.t;\n  } else {\n    f = this.s & this.DM;\n\n    for (i = m; i < a.t; ++i) r.data[i] = op(f, a.data[i]);\n\n    r.t = a.t;\n  }\n\n  r.s = op(this.s, a.s);\n  r.clamp();\n} //(public) this & a\n\n\nfunction op_and(x, y) {\n  return x & y;\n}\n\nfunction bnAnd(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_and, r);\n  return r;\n} //(public) this | a\n\n\nfunction op_or(x, y) {\n  return x | y;\n}\n\nfunction bnOr(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_or, r);\n  return r;\n} //(public) this ^ a\n\n\nfunction op_xor(x, y) {\n  return x ^ y;\n}\n\nfunction bnXor(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_xor, r);\n  return r;\n} //(public) this & ~a\n\n\nfunction op_andnot(x, y) {\n  return x & ~y;\n}\n\nfunction bnAndNot(a) {\n  var r = nbi();\n  this.bitwiseTo(a, op_andnot, r);\n  return r;\n} //(public) ~this\n\n\nfunction bnNot() {\n  var r = nbi();\n\n  for (var i = 0; i < this.t; ++i) r.data[i] = this.DM & ~this.data[i];\n\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n} //(public) this << n\n\n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);\n  return r;\n} //(public) this >> n\n\n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);\n  return r;\n} //return index of lowest 1-bit in x, x < 2^31\n\n\nfunction lbit(x) {\n  if (x == 0) return -1;\n  var r = 0;\n\n  if ((x & 0xffff) == 0) {\n    x >>= 16;\n    r += 16;\n  }\n\n  if ((x & 0xff) == 0) {\n    x >>= 8;\n    r += 8;\n  }\n\n  if ((x & 0xf) == 0) {\n    x >>= 4;\n    r += 4;\n  }\n\n  if ((x & 3) == 0) {\n    x >>= 2;\n    r += 2;\n  }\n\n  if ((x & 1) == 0) ++r;\n  return r;\n} //(public) returns index of lowest 1-bit (or -1 if none)\n\n\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i) if (this.data[i] != 0) return i * this.DB + lbit(this.data[i]);\n\n  if (this.s < 0) return this.t * this.DB;\n  return -1;\n} //return number of 1 bits in x\n\n\nfunction cbit(x) {\n  var r = 0;\n\n  while (x != 0) {\n    x &= x - 1;\n    ++r;\n  }\n\n  return r;\n} //(public) return number of set bits\n\n\nfunction bnBitCount() {\n  var r = 0,\n      x = this.s & this.DM;\n\n  for (var i = 0; i < this.t; ++i) r += cbit(this.data[i] ^ x);\n\n  return r;\n} //(public) true iff nth bit is set\n\n\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB);\n  if (j >= this.t) return this.s != 0;\n  return (this.data[j] & 1 << n % this.DB) != 0;\n} //(protected) this op (1<<n)\n\n\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r, op, r);\n  return r;\n} //(public) this | (1<<n)\n\n\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or);\n} //(public) this & ~(1<<n)\n\n\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot);\n} //(public) this ^ (1<<n)\n\n\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor);\n} //(protected) r = this + a\n\n\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this.data[i] + a.data[i];\n    r.data[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c += a.s;\n\n    while (i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c += a.data[i];\n      r.data[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r.data[i++] = c;else if (c < -1) r.data[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n} //(public) this + a\n\n\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n} //(public) this - a\n\n\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n} //(public) this * a\n\n\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n} //(public) this / a\n\n\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n} //(public) this % a\n\n\nfunction bnRemainder(a) {\n  var r = nbi();\n  this.divRemTo(a, null, r);\n  return r;\n} //(public) [this/a,this%a]\n\n\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(),\n      r = nbi();\n  this.divRemTo(a, q, r);\n  return new Array(q, r);\n} //(protected) this *= n, this >= 0, 1 < n < DV\n\n\nfunction bnpDMultiply(n) {\n  this.data[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n  ++this.t;\n  this.clamp();\n} //(protected) this += n << w words, this >= 0\n\n\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return;\n\n  while (this.t <= w) this.data[this.t++] = 0;\n\n  this.data[w] += n;\n\n  while (this.data[w] >= this.DV) {\n    this.data[w] -= this.DV;\n    if (++w >= this.t) this.data[this.t++] = 0;\n    ++this.data[w];\n  }\n} //A \"null\" reducer\n\n\nfunction NullExp() {}\n\nfunction nNop(x) {\n  return x;\n}\n\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n}\n\nfunction nSqrTo(x, r) {\n  x.squareTo(r);\n}\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo; //(public) this^e\n\nfunction bnPow(e) {\n  return this.exp(e, new NullExp());\n} //(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n);\n  r.s = 0; // assumes a,this >= 0\n\n  r.t = i;\n\n  while (i > 0) r.data[--i] = 0;\n\n  var j;\n\n  for (j = r.t - this.t; i < j; ++i) r.data[i + this.t] = this.am(0, a.data[i], r, i, 0, this.t);\n\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a.data[i], r, i, 0, n - i);\n\n  r.clamp();\n} //(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n;\n  var i = r.t = this.t + a.t - n;\n  r.s = 0; // assumes a,this >= 0\n\n  while (--i >= 0) r.data[i] = 0;\n\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i) r.data[this.t + i - n] = this.am(n - i, a.data[i], r, 0, 0, this.t + i - n);\n\n  r.clamp();\n  r.drShiftTo(1, r);\n} //Barrett modular reduction\n\n\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n}\n\nfunction barrettRevert(x) {\n  return x;\n} //x = x mod m (HAC 14.42)\n\n\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t - 1, this.r2);\n\n  if (x.t > this.m.t + 1) {\n    x.t = this.m.t + 1;\n    x.clamp();\n  }\n\n  this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n  this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n\n  while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n\n  x.subTo(this.r2, x);\n\n  while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} //r = x^2 mod m; x != r\n\n\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} //r = x*y mod m; x,y != r\n\n\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo; //(public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z;\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n  if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m); // precomputation\n\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e.data[j]) - 1;\n\n  while (j >= 0) {\n    if (i >= k1) w = e.data[j] >> i - k1 & km;else {\n      w = (e.data[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e.data[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e.data[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n\n  return z.revert(r);\n} //(public) gcd(this,a) (HAC 14.54)\n\n\nfunction bnGCD(a) {\n  var x = this.s < 0 ? this.negate() : this.clone();\n  var y = a.s < 0 ? a.negate() : a.clone();\n\n  if (x.compareTo(y) < 0) {\n    var t = x;\n    x = y;\n    y = t;\n  }\n\n  var i = x.getLowestSetBit(),\n      g = y.getLowestSetBit();\n  if (g < 0) return x;\n  if (i < g) g = i;\n\n  if (g > 0) {\n    x.rShiftTo(g, x);\n    y.rShiftTo(g, y);\n  }\n\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x);\n      x.rShiftTo(1, x);\n    } else {\n      y.subTo(x, y);\n      y.rShiftTo(1, y);\n    }\n  }\n\n  if (g > 0) y.lShiftTo(g, y);\n  return y;\n} //(protected) this % n, n < 2^26\n\n\nfunction bnpModInt(n) {\n  if (n <= 0) return 0;\n  var d = this.DV % n,\n      r = this.s < 0 ? n - 1 : 0;\n  if (this.t > 0) if (d == 0) r = this.data[0] % n;else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this.data[i]) % n;\n  return r;\n} //(public) 1/this % m (HAC 14.61)\n\n\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(),\n      v = this.clone();\n  var a = nbv(1),\n      b = nbv(0),\n      c = nbv(0),\n      d = nbv(1);\n\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u);\n\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a);\n          b.subTo(m, b);\n        }\n\n        a.rShiftTo(1, a);\n      } else if (!b.isEven()) b.subTo(m, b);\n\n      b.rShiftTo(1, b);\n    }\n\n    while (v.isEven()) {\n      v.rShiftTo(1, v);\n\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c);\n          d.subTo(m, d);\n        }\n\n        c.rShiftTo(1, c);\n      } else if (!d.isEven()) d.subTo(m, d);\n\n      d.rShiftTo(1, d);\n    }\n\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u);\n      if (ac) a.subTo(c, a);\n      b.subTo(d, b);\n    } else {\n      v.subTo(u, v);\n      if (ac) c.subTo(a, c);\n      d.subTo(b, d);\n    }\n  }\n\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if (d.compareTo(m) >= 0) return d.subtract(m);\n  if (d.signum() < 0) d.addTo(m, d);else return d;\n  if (d.signum() < 0) return d.add(m);else return d;\n}\n\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1]; //(public) test primality with certainty >= 1-.5^t\n\nfunction bnIsProbablePrime(t) {\n  var i,\n      x = this.abs();\n\n  if (x.t == 1 && x.data[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i) if (x.data[0] == lowprimes[i]) return true;\n\n    return false;\n  }\n\n  if (x.isEven()) return false;\n  i = 1;\n\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n        j = i + 1;\n\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n\n    m = x.modInt(m);\n\n    while (i < j) if (m % lowprimes[i++] == 0) return false;\n  }\n\n  return x.millerRabin(t);\n} //(protected) true if probably prime (HAC 4.24, Miller-Rabin)\n\n\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if (k <= 0) return false;\n  var r = n1.shiftRight(k);\n  var prng = bnGetPrng();\n  var a;\n\n  for (var i = 0; i < t; ++i) {\n    // select witness 'a' at random from between 1 and n1\n    do {\n      a = new BigInteger(this.bitLength(), prng);\n    } while (a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n\n    var y = a.modPow(r, this);\n\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this);\n        if (y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n\n      if (y.compareTo(n1) != 0) return false;\n    }\n  }\n\n  return true;\n} // get pseudo random number generator\n\n\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function (x) {\n      for (var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n} //protected\n\n\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin; //public\n\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime; //BigInteger interfaces not implemented in jsbn:\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)","map":{"version":3,"names":["forge","require","module","exports","jsbn","dbits","canary","j_lm","BigInteger","a","b","c","data","fromNumber","fromString","nbi","am1","i","x","w","j","n","v","Math","floor","am2","xl","xh","l","h","m","am3","navigator","prototype","am","appName","DB","DM","DV","BI_FP","FV","pow","F1","F2","BI_RM","BI_RC","Array","rr","vv","charCodeAt","int2char","charAt","intAt","s","bnpCopyTo","r","t","bnpFromInt","nbv","fromInt","bnpFromString","k","fromRadix","length","mi","sh","clamp","ZERO","subTo","bnpClamp","bnToString","negate","toString","toRadix","km","d","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","d1","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","g","bnModPowInt","isEven","exp","bitLength","modPowInt","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","log","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","substr","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","f","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","clone","getLowestSetBit","bnpModInt","bnModInverse","ac","u","subtract","add","lowprimes","lplim","bnIsProbablePrime","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","prng","bnGetPrng","modPow","random","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/node-forge/lib/jsbn.js"],"sourcesContent":["// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}