{"ast":null,"code":"\"use strict\"; // Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baremetalsolution_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/* eslint-disable @typescript-eslint/no-namespace */\n\n/* eslint-disable no-irregular-whitespace */\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nvar baremetalsolution_v2;\n\n(function (baremetalsolution_v2) {\n  /**\n   * Bare Metal Solution API\n   *\n   * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const baremetalsolution = google.baremetalsolution('v2');\n   * ```\n   */\n  class Baremetalsolution {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.projects = new Resource$Projects(this.context);\n    }\n\n  }\n\n  baremetalsolution_v2.Baremetalsolution = Baremetalsolution;\n\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects = Resource$Projects;\n\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.instanceProvisioningSettings = new Resource$Projects$Locations$Instanceprovisioningsettings(this.context);\n      this.instances = new Resource$Projects$Locations$Instances(this.context);\n      this.networks = new Resource$Projects$Locations$Networks(this.context);\n      this.nfsShares = new Resource$Projects$Locations$Nfsshares(this.context);\n      this.operations = new Resource$Projects$Locations$Operations(this.context);\n      this.provisioningConfigs = new Resource$Projects$Locations$Provisioningconfigs(this.context);\n      this.provisioningQuotas = new Resource$Projects$Locations$Provisioningquotas(this.context);\n      this.volumes = new Resource$Projects$Locations$Volumes(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations = Resource$Projects$Locations;\n\n  class Resource$Projects$Locations$Instanceprovisioningsettings {\n    constructor(context) {\n      this.context = context;\n    }\n\n    fetch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+location}/instanceProvisioningSettings:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['location'],\n        pathParams: ['location'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Instanceprovisioningsettings = Resource$Projects$Locations$Instanceprovisioningsettings;\n\n  class Resource$Projects$Locations$Instances {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    detachLun(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+instance}:detachLun').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['instance'],\n        pathParams: ['instance'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    reset(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:reset').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    start(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:start').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    stop(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:stop').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Instances = Resource$Projects$Locations$Instances;\n\n  class Resource$Projects$Locations$Networks {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/networks').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    listNetworkUsage(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+location}/networks:listNetworkUsage').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['location'],\n        pathParams: ['location'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Networks = Resource$Projects$Locations$Networks;\n\n  class Resource$Projects$Locations$Nfsshares {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Nfsshares = Resource$Projects$Locations$Nfsshares;\n\n  class Resource$Projects$Locations$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n\n  class Resource$Projects$Locations$Provisioningconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    submit(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningConfigs:submit').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Provisioningconfigs = Resource$Projects$Locations$Provisioningconfigs;\n\n  class Resource$Projects$Locations$Provisioningquotas {\n    constructor(context) {\n      this.context = context;\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningQuotas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Provisioningquotas = Resource$Projects$Locations$Provisioningquotas;\n\n  class Resource$Projects$Locations$Volumes {\n    constructor(context) {\n      this.context = context;\n      this.luns = new Resource$Projects$Locations$Volumes$Luns(this.context);\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    resize(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+volume}:resize').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['volume'],\n        pathParams: ['volume'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Volumes = Resource$Projects$Locations$Volumes;\n\n  class Resource$Projects$Locations$Volumes$Luns {\n    constructor(context) {\n      this.context = context;\n    }\n\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/luns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n\n  }\n\n  baremetalsolution_v2.Resource$Projects$Locations$Volumes$Luns = Resource$Projects$Locations$Volumes$Luns;\n})(baremetalsolution_v2 = exports.baremetalsolution_v2 || (exports.baremetalsolution_v2 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","baremetalsolution_v2","googleapis_common_1","require","Baremetalsolution","constructor","options","google","context","_options","projects","Resource$Projects","locations","Resource$Projects$Locations","instanceProvisioningSettings","Resource$Projects$Locations$Instanceprovisioningsettings","instances","Resource$Projects$Locations$Instances","networks","Resource$Projects$Locations$Networks","nfsShares","Resource$Projects$Locations$Nfsshares","operations","Resource$Projects$Locations$Operations","provisioningConfigs","Resource$Projects$Locations$Provisioningconfigs","provisioningQuotas","Resource$Projects$Locations$Provisioningquotas","volumes","Resource$Projects$Locations$Volumes","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","fetch","create","detachLun","patch","reset","start","stop","listNetworkUsage","submit","luns","Resource$Projects$Locations$Volumes$Luns","resize"],"sources":["C:/Users/frexm/Desktop/ProductListing/node_modules/googleapis/build/src/apis/baremetalsolution/v2.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baremetalsolution_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar baremetalsolution_v2;\n(function (baremetalsolution_v2) {\n    /**\n     * Bare Metal Solution API\n     *\n     * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const baremetalsolution = google.baremetalsolution('v2');\n     * ```\n     */\n    class Baremetalsolution {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    baremetalsolution_v2.Baremetalsolution = Baremetalsolution;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    baremetalsolution_v2.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.instanceProvisioningSettings =\n                new Resource$Projects$Locations$Instanceprovisioningsettings(this.context);\n            this.instances = new Resource$Projects$Locations$Instances(this.context);\n            this.networks = new Resource$Projects$Locations$Networks(this.context);\n            this.nfsShares = new Resource$Projects$Locations$Nfsshares(this.context);\n            this.operations = new Resource$Projects$Locations$Operations(this.context);\n            this.provisioningConfigs =\n                new Resource$Projects$Locations$Provisioningconfigs(this.context);\n            this.provisioningQuotas =\n                new Resource$Projects$Locations$Provisioningquotas(this.context);\n            this.volumes = new Resource$Projects$Locations$Volumes(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Instanceprovisioningsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        fetch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+location}/instanceProvisioningSettings:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['location'],\n                pathParams: ['location'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Instanceprovisioningsettings = Resource$Projects$Locations$Instanceprovisioningsettings;\n    class Resource$Projects$Locations$Instances {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        detachLun(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instance}:detachLun').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['instance'],\n                pathParams: ['instance'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:reset').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        start(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:start').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:stop').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Instances = Resource$Projects$Locations$Instances;\n    class Resource$Projects$Locations$Networks {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/networks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listNetworkUsage(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+location}/networks:listNetworkUsage').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['location'],\n                pathParams: ['location'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Networks = Resource$Projects$Locations$Networks;\n    class Resource$Projects$Locations$Nfsshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Nfsshares = Resource$Projects$Locations$Nfsshares;\n    class Resource$Projects$Locations$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n    class Resource$Projects$Locations$Provisioningconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        submit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningConfigs:submit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Provisioningconfigs = Resource$Projects$Locations$Provisioningconfigs;\n    class Resource$Projects$Locations$Provisioningquotas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningQuotas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Provisioningquotas = Resource$Projects$Locations$Provisioningquotas;\n    class Resource$Projects$Locations$Volumes {\n        constructor(context) {\n            this.context = context;\n            this.luns = new Resource$Projects$Locations$Volumes$Luns(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resize(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+volume}:resize').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['volume'],\n                pathParams: ['volume'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Volumes = Resource$Projects$Locations$Volumes;\n    class Resource$Projects$Locations$Volumes$Luns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/luns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Volumes$Luns = Resource$Projects$Locations$Volumes$Luns;\n})(baremetalsolution_v2 = exports.baremetalsolution_v2 || (exports.baremetalsolution_v2 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}